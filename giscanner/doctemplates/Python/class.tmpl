<%inherit file="/base.tmpl"/>
<%block name="synopsis">
  <synopsis><code>
from gi.repository import ${namespace.name}

${formatter.to_underscores(node.name).lower()} = ${namespace.name}.${node.name}(\
% for property_, ix in zip(node.properties, range(len(node.properties))):
% if property_.construct or property_.construct_only or property_.writable:
<link xref='${namespace.name}.${node.name}-${property_.name}'>${property_.name.replace('-', '_')}</link>=value\
% if ix != len(node.properties) - 1:
, \
% endif
% endif
% endfor
)\
  </code></synopsis>
</%block>
<%block name="details">
  <synopsis>
    <title>Hierarchy</title>
    <tree>
% for class_ in formatter.get_class_hierarchy(node):
      <item>
        <code>${class_.namespace.name}.${class_.name}</code>
% endfor
% for class_ in formatter.get_class_hierarchy(node):
      </item>
% endfor
    </tree>
  </synopsis>
</%block>
<%block name="links">
  <links type="topic" ui:expanded="yes"
         api:type="function" api:mime="text/x-python"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="yes"
         api:type="function" api:mime="text/x-python"
         groups="function" style="linklist">
    <title>Functions</title>
  </links>
  <links type="topic" ui:expanded="yes" groups="property" style="linklist">
    <title>Properties</title>
  </links>
  <links type="topic" ui:expanded="yes" groups="signal" style="linklist">
    <title>Signals</title>
  </links>
  <links type="topic" ui:expanded="yes" groups="vfunc" style="linklist">
    <title>Virtual functions</title>
  </links>
  <links type="topic" ui:expanded="yes" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</%block>
