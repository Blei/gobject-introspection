<?xml version="1.0"?>
<page id="${page_id}"
      type="topic"
      style="${page_style}"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/">
  <info>
% if node.parent is not None:
    <link type="guide" xref="${namespace.name}.${node.parent.name}" group="${page_style}"/>
% else:
    <link type="guide" xref="index" group="${page_style}"/>
% endif
    <api:function>
      <api:returns>
        <api:type>${formatter.format_type(node.retval.type) | x}</api:type>
      </api:returns>
      <api:name>${node.symbol}</api:name>
% if node.is_method:
      <api:arg>
        <api:type>${node.parent.ctype} *</api:type>
        <api:name>self</api:name>
      </api:arg>
% endif
% for arg in node.parameters:
% if arg.type.ctype == '<varargs>':
      <api:varargs/>
% else:
      <api:arg>
        <api:type>${formatter.format_type(arg.type) | x}</api:type>
        <api:name>${arg.argname}</api:name>
      </api:arg>
% endif
% endfor
    </api:function>
  </info>
  <title>${node.name}</title>
<synopsis><code mime="text/x-python">
% if len(node.parameters) != 0:
@accepts(\
${', '.join((formatter.format_type(arg.type) for arg in node.parameters))}\
)
% endif
@returns(${formatter.format_type(node.retval.type) | x})
def \
${node.name}(\
% if node.is_method:
self, \
% endif
${', '.join((arg.argname for arg in node.parameters))}\
):
    # Python wrapper for ${node.symbol}()
</code></synopsis>
${formatter.format(node, node.doc)}

% if node.parameters or node.retval:
<table>
% for arg, ix in zip(node.parameters, range(len(node.parameters))):
<tr>
<td><p>${arg.argname} :</p></td>
<td>${formatter.format(node, arg.doc)}</td>
</tr>
% endfor
% if node.retval and node.retval.type.ctype != 'void':
<tr>
<td><p>Returns :</p></td>
<td>${formatter.format(node, node.retval.doc)}</td>
</tr>
% endif
</table>
% endif
% if node.version:
<p>Since ${node.version}</p>
% endif
</page>
