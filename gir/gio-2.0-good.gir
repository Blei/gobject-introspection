<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <namespace name="Gio">
    <interface name="Icon"
               c:type="GIcon"
               glib:type-name="GIcon"
               glib:get-type="g_icon_get_type">
      <callback name="hash" c:type="hash">
        <return-value>
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="equal" c:type="equal">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="icon1">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
          <parameter name="icon2">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </callback>
    </interface>
    <record name="IconIface" c:type="GIconIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="hash" c:type="hash">
        <return-value>
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="equal" c:type="equal">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="icon1">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
          <parameter name="icon2">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <function name="icon_hash" c:identifier="g_icon_hash">
      <return-value>
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="icon">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="icon_equal" c:identifier="g_icon_equal">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="icon1">
          <type name="Icon" c:type="GIcon*"/>
        </parameter>
        <parameter name="icon2">
          <type name="Icon" c:type="GIcon*"/>
        </parameter>
      </parameters>
    </function>
    <bitfield name="AppInfoCreateFlags"
              c:type="GAppInfoCreateFlags"
              glib:type-name="GAppInfoCreateFlags"
              glib:get-type="g_app_info_create_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_APP_INFO_CREATE_NONE"
              glib:nick="none"/>
      <member name="needs-terminal"
              value="1"
              c:identifier="G_APP_INFO_CREATE_NEEDS_TERMINAL"
              glib:nick="needs-terminal"/>
      <member name="supports-uris"
              value="2"
              c:identifier="G_APP_INFO_CREATE_SUPPORTS_URIS"
              glib:nick="supports-uris"/>
    </bitfield>
    <class name="AppLaunchContext"
           c:type="GAppLaunchContext"
           parent="GObject.Object"
           glib:type-name="GAppLaunchContext"
           glib:get-type="g_app_launch_context_get_type">
      <constructor name="new" c:identifier="g_app_launch_context_new">
        <return-value>
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </return-value>
      </constructor>
      <method name="get_display"
              c:identifier="g_app_launch_context_get_display">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="info">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_startup_notify_id"
              c:identifier="g_app_launch_context_get_startup_notify_id">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="info">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="launch_failed"
              c:identifier="g_app_launch_context_launch_failed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="startup_notify_id">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="AppLaunchContextPrivate"
              c:type="GAppLaunchContextPrivate*"/>
      </field>
      <callback name="et_display" c:type="get_display">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="info">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_startup_notify_id" c:type="get_startup_notify_id">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="info">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="launch_failed" c:type="launch_failed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="startup_notify_id">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="AppLaunchContextClass" c:type="GAppLaunchContextClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="et_display" c:type="get_display">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="info">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_startup_notify_id" c:type="get_startup_notify_id">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="info">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="launch_failed" c:type="launch_failed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="startup_notify_id">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="AppLaunchContextPrivate" c:type="GAppLaunchContextPrivate"/>
    <interface name="AppInfo"
               c:type="GAppInfo"
               glib:type-name="GAppInfo"
               glib:get-type="g_app_info_get_type">
      <callback name="dup" c:type="dup">
        <return-value>
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="equal" c:type="equal">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo1">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="appinfo2">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_id" c:type="get_id">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_description" c:type="get_description">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_executable" c:type="get_executable">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="launch" c:type="launch">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="filenames">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
          <parameter name="launch_context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="supports_uris" c:type="supports_uris">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="supports_files" c:type="supports_files">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="launch_uris" c:type="launch_uris">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="uris">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
          <parameter name="launch_context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="should_show" c:type="should_show">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_as_default_for_type"
                c:type="set_as_default_for_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="content_type">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_as_default_for_extension"
                c:type="set_as_default_for_extension">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="extension">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="add_supports_type" c:type="add_supports_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="content_type">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_remove_supports_type"
                c:type="can_remove_supports_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="remove_supports_type" c:type="remove_supports_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="content_type">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </interface>
    <record name="AppInfoIface" c:type="GAppInfoIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="dup" c:type="dup">
        <return-value>
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="equal" c:type="equal">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo1">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="appinfo2">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_id" c:type="get_id">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_description" c:type="get_description">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_executable" c:type="get_executable">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="launch" c:type="launch">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="filenames">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
          <parameter name="launch_context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="supports_uris" c:type="supports_uris">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="supports_files" c:type="supports_files">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="launch_uris" c:type="launch_uris">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="uris">
            <type name="GLib.List" c:type="GList*"/>
          </parameter>
          <parameter name="launch_context">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="should_show" c:type="should_show">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_as_default_for_type"
                c:type="set_as_default_for_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="content_type">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_as_default_for_extension"
                c:type="set_as_default_for_extension">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="extension">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="add_supports_type" c:type="add_supports_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="content_type">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_remove_supports_type"
                c:type="can_remove_supports_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="remove_supports_type" c:type="remove_supports_type">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="content_type">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <function name="app_info_create_from_commandline"
              c:identifier="g_app_info_create_from_commandline">
      <return-value>
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="commandline">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="application_name">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="flags">
          <type name="AppInfoCreateFlags" c:type="GAppInfoCreateFlags"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_dup" c:identifier="g_app_info_dup">
      <return-value>
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_equal" c:identifier="g_app_info_equal">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo1">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
        <parameter name="appinfo2">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_id" c:identifier="g_app_info_get_id">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_name" c:identifier="g_app_info_get_name">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_description"
              c:identifier="g_app_info_get_description">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_executable"
              c:identifier="g_app_info_get_executable">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_icon" c:identifier="g_app_info_get_icon">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_launch" c:identifier="g_app_info_launch">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
        <parameter name="files">
          <type name="GLib.List" c:type="GList*"/>
        </parameter>
        <parameter name="launch_context">
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_supports_uris"
              c:identifier="g_app_info_supports_uris">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_supports_files"
              c:identifier="g_app_info_supports_files">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_launch_uris"
              c:identifier="g_app_info_launch_uris">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
        <parameter name="uris">
          <type name="GLib.List" c:type="GList*"/>
        </parameter>
        <parameter name="launch_context">
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_should_show"
              c:identifier="g_app_info_should_show">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_set_as_default_for_type"
              c:identifier="g_app_info_set_as_default_for_type">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
        <parameter name="content_type">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_set_as_default_for_extension"
              c:identifier="g_app_info_set_as_default_for_extension">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
        <parameter name="extension">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_add_supports_type"
              c:identifier="g_app_info_add_supports_type">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
        <parameter name="content_type">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_can_remove_supports_type"
              c:identifier="g_app_info_can_remove_supports_type">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_remove_supports_type"
              c:identifier="g_app_info_remove_supports_type">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="appinfo">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </parameter>
        <parameter name="content_type">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_all" c:identifier="g_app_info_get_all">
      <return-value>
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
    </function>
    <function name="app_info_get_all_for_type"
              c:identifier="g_app_info_get_all_for_type">
      <return-value>
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="content_type">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_default_for_type"
              c:identifier="g_app_info_get_default_for_type">
      <return-value>
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="content_type">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="must_support_uris">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_default_for_uri_scheme"
              c:identifier="g_app_info_get_default_for_uri_scheme">
      <return-value>
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_launch_default_for_uri"
              c:identifier="g_app_info_launch_default_for_uri">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="launch_context">
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <interface name="AsyncResult"
               c:type="GAsyncResult"
               glib:type-name="GAsyncResult"
               glib:get-type="g_async_result_get_type">
      <callback name="et_user_data" c:type="get_user_data">
        <return-value>
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="async_result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_source_object" c:type="get_source_object">
        <return-value>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="async_result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </callback>
    </interface>
    <record name="AsyncResultIface" c:type="GAsyncResultIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="et_user_data" c:type="get_user_data">
        <return-value>
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="async_result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_source_object" c:type="get_source_object">
        <return-value>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="async_result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <callback name="AsyncReadyCallback" c:type="GAsyncReadyCallback">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="source_object">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function name="async_result_get_user_data"
              c:identifier="g_async_result_get_user_data">
      <return-value>
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="async_result_get_source_object"
              c:identifier="g_async_result_get_source_object">
      <return-value>
        <type name="GObject.Object" c:type="GObject*"/>
      </return-value>
      <parameters>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_error_quark" c:identifier="g_io_error_quark">
      <return-value>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <enumeration name="ErrorEnum"
                 c:type="GIOErrorEnum"
                 glib:type-name="GIOErrorEnum"
                 glib:get-type="g_io_error_enum_get_type">
      <member name="failed"
              value="0"
              c:identifier="G_IO_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="not-found"
              value="1"
              c:identifier="G_IO_ERROR_NOT_FOUND"
              glib:nick="not-found"/>
      <member name="exists"
              value="2"
              c:identifier="G_IO_ERROR_EXISTS"
              glib:nick="exists"/>
      <member name="is-directory"
              value="3"
              c:identifier="G_IO_ERROR_IS_DIRECTORY"
              glib:nick="is-directory"/>
      <member name="not-directory"
              value="4"
              c:identifier="G_IO_ERROR_NOT_DIRECTORY"
              glib:nick="not-directory"/>
      <member name="not-empty"
              value="5"
              c:identifier="G_IO_ERROR_NOT_EMPTY"
              glib:nick="not-empty"/>
      <member name="not-regular-file"
              value="6"
              c:identifier="G_IO_ERROR_NOT_REGULAR_FILE"
              glib:nick="not-regular-file"/>
      <member name="not-symbolic-link"
              value="7"
              c:identifier="G_IO_ERROR_NOT_SYMBOLIC_LINK"
              glib:nick="not-symbolic-link"/>
      <member name="not-mountable-file"
              value="8"
              c:identifier="G_IO_ERROR_NOT_MOUNTABLE_FILE"
              glib:nick="not-mountable-file"/>
      <member name="filename-too-long"
              value="9"
              c:identifier="G_IO_ERROR_FILENAME_TOO_LONG"
              glib:nick="filename-too-long"/>
      <member name="invalid-filename"
              value="10"
              c:identifier="G_IO_ERROR_INVALID_FILENAME"
              glib:nick="invalid-filename"/>
      <member name="too-many-links"
              value="11"
              c:identifier="G_IO_ERROR_TOO_MANY_LINKS"
              glib:nick="too-many-links"/>
      <member name="no-space"
              value="12"
              c:identifier="G_IO_ERROR_NO_SPACE"
              glib:nick="no-space"/>
      <member name="invalid-argument"
              value="13"
              c:identifier="G_IO_ERROR_INVALID_ARGUMENT"
              glib:nick="invalid-argument"/>
      <member name="permission-denied"
              value="14"
              c:identifier="G_IO_ERROR_PERMISSION_DENIED"
              glib:nick="permission-denied"/>
      <member name="not-supported"
              value="15"
              c:identifier="G_IO_ERROR_NOT_SUPPORTED"
              glib:nick="not-supported"/>
      <member name="not-mounted"
              value="16"
              c:identifier="G_IO_ERROR_NOT_MOUNTED"
              glib:nick="not-mounted"/>
      <member name="already-mounted"
              value="17"
              c:identifier="G_IO_ERROR_ALREADY_MOUNTED"
              glib:nick="already-mounted"/>
      <member name="closed"
              value="18"
              c:identifier="G_IO_ERROR_CLOSED"
              glib:nick="closed"/>
      <member name="cancelled"
              value="19"
              c:identifier="G_IO_ERROR_CANCELLED"
              glib:nick="cancelled"/>
      <member name="pending"
              value="20"
              c:identifier="G_IO_ERROR_PENDING"
              glib:nick="pending"/>
      <member name="read-only"
              value="21"
              c:identifier="G_IO_ERROR_READ_ONLY"
              glib:nick="read-only"/>
      <member name="cant-create-backup"
              value="22"
              c:identifier="G_IO_ERROR_CANT_CREATE_BACKUP"
              glib:nick="cant-create-backup"/>
      <member name="wrong-etag"
              value="23"
              c:identifier="G_IO_ERROR_WRONG_ETAG"
              glib:nick="wrong-etag"/>
      <member name="timed-out"
              value="24"
              c:identifier="G_IO_ERROR_TIMED_OUT"
              glib:nick="timed-out"/>
      <member name="would-recurse"
              value="25"
              c:identifier="G_IO_ERROR_WOULD_RECURSE"
              glib:nick="would-recurse"/>
      <member name="busy"
              value="26"
              c:identifier="G_IO_ERROR_BUSY"
              glib:nick="busy"/>
      <member name="would-block"
              value="27"
              c:identifier="G_IO_ERROR_WOULD_BLOCK"
              glib:nick="would-block"/>
      <member name="host-not-found"
              value="28"
              c:identifier="G_IO_ERROR_HOST_NOT_FOUND"
              glib:nick="host-not-found"/>
      <member name="would-merge"
              value="29"
              c:identifier="G_IO_ERROR_WOULD_MERGE"
              glib:nick="would-merge"/>
      <member name="failed-handled"
              value="30"
              c:identifier="G_IO_ERROR_FAILED_HANDLED"
              glib:nick="failed-handled"/>
    </enumeration>
    <function name="io_error_from_errno" c:identifier="g_io_error_from_errno">
      <return-value>
        <type name="ErrorEnum" c:type="GIOErrorEnum"/>
      </return-value>
      <parameters>
        <parameter name="err_no">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <class name="Cancellable"
           c:type="GCancellable"
           parent="GObject.Object"
           glib:type-name="GCancellable"
           glib:get-type="g_cancellable_get_type">
      <constructor name="new" c:identifier="g_cancellable_new">
        <return-value>
          <type name="Cancellable" c:type="GCancellable*"/>
        </return-value>
      </constructor>
      <constructor name="get_current" c:identifier="g_cancellable_get_current">
        <return-value>
          <type name="Cancellable" c:type="GCancellable*"/>
        </return-value>
      </constructor>
      <method name="is_cancelled" c:identifier="g_cancellable_is_cancelled">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_error_if_cancelled"
              c:identifier="g_cancellable_set_error_if_cancelled">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fd" c:identifier="g_cancellable_get_fd">
        <return-value>
          <type name="int" c:type="int"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="push_current" c:identifier="g_cancellable_push_current">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop_current" c:identifier="g_cancellable_pop_current">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="g_cancellable_reset">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel" c:identifier="g_cancellable_cancel">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <callback name="cancelled" c:type="cancelled">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <glib:signal name="cancelled">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CancellableClass" c:type="GCancellableClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="cancelled" c:type="cancelled">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <class name="InputStream"
           c:type="GInputStream"
           parent="GObject.Object"
           glib:type-name="GInputStream"
           glib:get-type="g_input_stream_get_type">
      <method name="read" c:identifier="g_input_stream_read">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_all" c:identifier="g_input_stream_read_all">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="bytes_read">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip" c:identifier="g_input_stream_skip">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_input_stream_close">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_async" c:identifier="g_input_stream_read_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_finish" c:identifier="g_input_stream_read_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_async" c:identifier="g_input_stream_skip_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_finish" c:identifier="g_input_stream_skip_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_input_stream_close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish" c:identifier="g_input_stream_close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_input_stream_is_closed">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_pending" c:identifier="g_input_stream_has_pending">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pending" c:identifier="g_input_stream_set_pending">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_pending" c:identifier="g_input_stream_clear_pending">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <callback name="read_fn" c:type="read_fn">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="skip" c:type="skip">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_fn" c:type="close_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_async" c:type="read_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_finish" c:type="read_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="skip_async" c:type="skip_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="skip_finish" c:type="skip_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_async" c:type="close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_finish" c:type="close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="InputStreamClass" c:type="GInputStreamClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="read_fn" c:type="read_fn">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="skip" c:type="skip">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_fn" c:type="close_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_async" c:type="read_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_finish" c:type="read_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="skip_async" c:type="skip_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="skip_finish" c:type="skip_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_async" c:type="close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_finish" c:type="close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="InputStreamPrivate" c:type="GInputStreamPrivate"/>
    <class name="FilterInputStream"
           c:type="GFilterInputStream"
           parent="InputStream"
           glib:type-name="GFilterInputStream"
           glib:get-type="g_filter_input_stream_get_type">
      <method name="get_base_stream"
              c:identifier="g_filter_input_stream_get_base_stream">
        <return-value>
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FilterInputStream" c:type="GFilterInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <property name="base-stream">
        <type name="InputStream" c:type="GInputStream"/>
      </property>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="FilterInputStreamClass" c:type="GFilterInputStreamClass">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="FilterInputStreamPrivate"
            c:type="GFilterInputStreamPrivate"/>
    <class name="BufferedInputStream"
           c:type="GBufferedInputStream"
           parent="FilterInputStream"
           glib:type-name="GBufferedInputStream"
           glib:get-type="g_buffered_input_stream_get_type">
      <method name="get_buffer_size"
              c:identifier="g_buffered_input_stream_get_buffer_size">
        <return-value>
          <type name="size_t" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer_size"
              c:identifier="g_buffered_input_stream_set_buffer_size">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="size">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available"
              c:identifier="g_buffered_input_stream_get_available">
        <return-value>
          <type name="size_t" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek" c:identifier="g_buffered_input_stream_peek">
        <return-value>
          <type name="size_t" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="offset">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_buffer"
              c:identifier="g_buffered_input_stream_peek_buffer">
        <return-value>
          <type name="any" c:type="void*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill" c:identifier="g_buffered_input_stream_fill">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill_async"
              c:identifier="g_buffered_input_stream_fill_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill_finish"
              c:identifier="g_buffered_input_stream_fill_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_byte"
              c:identifier="g_buffered_input_stream_read_byte">
        <return-value>
          <type name="int" c:type="int"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer-size">
        <type name="uint" c:type="guint"/>
      </property>
      <callback name="fill" c:type="fill">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="fill_async" c:type="fill_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="fill_finish" c:type="fill_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="BufferedInputStreamClass" c:type="GBufferedInputStreamClass">
      <field name="parent_class">
        <type name="FilterInputStreamClass" c:type="GFilterInputStreamClass"/>
      </field>
      <callback name="fill" c:type="fill">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="fill_async" c:type="fill_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="count">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="fill_finish" c:type="fill_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="BufferedInputStreamPrivate"
            c:type="GBufferedInputStreamPrivate"/>
    <function name="buffered_input_stream_new"
              c:identifier="g_buffered_input_stream_new">
      <return-value>
        <type name="InputStream" c:type="GInputStream*"/>
      </return-value>
      <parameters>
        <parameter name="base_stream">
          <type name="InputStream" c:type="GInputStream*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffered_input_stream_new_sized"
              c:identifier="g_buffered_input_stream_new_sized">
      <return-value>
        <type name="InputStream" c:type="GInputStream*"/>
      </return-value>
      <parameters>
        <parameter name="base_stream">
          <type name="InputStream" c:type="GInputStream*"/>
        </parameter>
        <parameter name="size">
          <type name="size_t" c:type="gsize"/>
        </parameter>
      </parameters>
    </function>
    <bitfield name="OutputStreamSpliceFlags"
              c:type="GOutputStreamSpliceFlags"
              glib:type-name="GOutputStreamSpliceFlags"
              glib:get-type="g_output_stream_splice_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_OUTPUT_STREAM_SPLICE_NONE"
              glib:nick="none"/>
      <member name="close-source"
              value="1"
              c:identifier="G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE"
              glib:nick="close-source"/>
      <member name="close-target"
              value="2"
              c:identifier="G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET"
              glib:nick="close-target"/>
    </bitfield>
    <class name="OutputStream"
           c:type="GOutputStream"
           parent="GObject.Object"
           glib:type-name="GOutputStream"
           glib:get-type="g_output_stream_get_type">
      <method name="write" c:identifier="g_output_stream_write">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_all" c:identifier="g_output_stream_write_all">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="bytes_written">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice" c:identifier="g_output_stream_splice">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="source">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="g_output_stream_flush">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_output_stream_close">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_async" c:identifier="g_output_stream_write_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_finish" c:identifier="g_output_stream_write_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice_async" c:identifier="g_output_stream_splice_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="source">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice_finish"
              c:identifier="g_output_stream_splice_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_async" c:identifier="g_output_stream_flush_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_finish" c:identifier="g_output_stream_flush_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_output_stream_close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish" c:identifier="g_output_stream_close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_output_stream_is_closed">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_pending" c:identifier="g_output_stream_has_pending">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pending" c:identifier="g_output_stream_set_pending">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_pending"
              c:identifier="g_output_stream_clear_pending">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <callback name="write_fn" c:type="write_fn">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="splice" c:type="splice">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="source">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="flush" c:type="flush">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_fn" c:type="close_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="write_async" c:type="write_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="write_finish" c:type="write_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="splice_async" c:type="splice_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="source">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="splice_finish" c:type="splice_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="flush_async" c:type="flush_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="flush_finish" c:type="flush_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_async" c:type="close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_finish" c:type="close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="OutputStreamClass" c:type="GOutputStreamClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="write_fn" c:type="write_fn">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="splice" c:type="splice">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="source">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="flush" c:type="flush">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_fn" c:type="close_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="write_async" c:type="write_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="buffer">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count">
            <type name="size_t" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="write_finish" c:type="write_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="splice_async" c:type="splice_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="source">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="splice_finish" c:type="splice_finish">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="flush_async" c:type="flush_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="flush_finish" c:type="flush_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_async" c:type="close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_finish" c:type="close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="OutputStreamPrivate" c:type="GOutputStreamPrivate"/>
    <class name="FilterOutputStream"
           c:type="GFilterOutputStream"
           parent="OutputStream"
           glib:type-name="GFilterOutputStream"
           glib:get-type="g_filter_output_stream_get_type">
      <method name="get_base_stream"
              c:identifier="g_filter_output_stream_get_base_stream">
        <return-value>
          <type name="OutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FilterOutputStream" c:type="GFilterOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <property name="base-stream">
        <type name="OutputStream" c:type="GOutputStream"/>
      </property>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="FilterOutputStreamClass" c:type="GFilterOutputStreamClass">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="FilterOutputStreamPrivate"
            c:type="GFilterOutputStreamPrivate"/>
    <class name="BufferedOutputStream"
           c:type="GBufferedOutputStream"
           parent="FilterOutputStream"
           glib:type-name="GBufferedOutputStream"
           glib:get-type="g_buffered_output_stream_get_type">
      <method name="get_buffer_size"
              c:identifier="g_buffered_output_stream_get_buffer_size">
        <return-value>
          <type name="size_t" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedOutputStream" c:type="GBufferedOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer_size"
              c:identifier="g_buffered_output_stream_set_buffer_size">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedOutputStream" c:type="GBufferedOutputStream*"/>
          </parameter>
          <parameter name="size">
            <type name="size_t" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auto_grow"
              c:identifier="g_buffered_output_stream_get_auto_grow">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedOutputStream" c:type="GBufferedOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auto_grow"
              c:identifier="g_buffered_output_stream_set_auto_grow">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="BufferedOutputStream" c:type="GBufferedOutputStream*"/>
          </parameter>
          <parameter name="auto_grow">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer-size">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="auto-grow">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="BufferedOutputStreamClass"
            c:type="GBufferedOutputStreamClass">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="BufferedOutputStreamPrivate"
            c:type="GBufferedOutputStreamPrivate"/>
    <function name="buffered_output_stream_new"
              c:identifier="g_buffered_output_stream_new">
      <return-value>
        <type name="OutputStream" c:type="GOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="base_stream">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffered_output_stream_new_sized"
              c:identifier="g_buffered_output_stream_new_sized">
      <return-value>
        <type name="OutputStream" c:type="GOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="base_stream">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </parameter>
        <parameter name="size">
          <type name="size_t" c:type="gsize"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_equals" c:identifier="g_content_type_equals">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type1">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="type2">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_is_a" c:identifier="g_content_type_is_a">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="supertype">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_is_unknown"
              c:identifier="g_content_type_is_unknown">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_description"
              c:identifier="g_content_type_get_description">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="type">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_mime_type"
              c:identifier="g_content_type_get_mime_type">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="type">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_icon"
              c:identifier="g_content_type_get_icon">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="type">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_can_be_executable"
              c:identifier="g_content_type_can_be_executable">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_guess" c:identifier="g_content_type_guess">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="filename">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="data">
          <type name="GLib.uchar" c:type="guchar*"/>
        </parameter>
        <parameter name="data_size">
          <type name="size_t" c:type="gsize"/>
        </parameter>
        <parameter name="result_uncertain">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_types_get_registered"
              c:identifier="g_content_types_get_registered">
      <return-value>
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
    </function>
    <class name="DataInputStream"
           c:type="GDataInputStream"
           parent="BufferedInputStream"
           glib:type-name="GDataInputStream"
           glib:get-type="g_data_input_stream_get_type">
      <constructor name="new" c:identifier="g_data_input_stream_new">
        <return-value>
          <type name="DataInputStream" c:type="GDataInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_byte_order"
              c:identifier="g_data_input_stream_set_byte_order">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="order">
            <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="g_data_input_stream_get_byte_order">
        <return-value>
          <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_newline_type"
              c:identifier="g_data_input_stream_set_newline_type">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="type">
            <type name="DataStreamNewlineType"
                  c:type="GDataStreamNewlineType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_newline_type"
              c:identifier="g_data_input_stream_get_newline_type">
        <return-value>
          <type name="DataStreamNewlineType" c:type="GDataStreamNewlineType"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_byte" c:identifier="g_data_input_stream_read_byte">
        <return-value>
          <type name="GLib.uchar" c:type="guchar"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int16" c:identifier="g_data_input_stream_read_int16">
        <return-value>
          <type name="int16" c:type="gint16"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint16"
              c:identifier="g_data_input_stream_read_uint16">
        <return-value>
          <type name="uint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int32" c:identifier="g_data_input_stream_read_int32">
        <return-value>
          <type name="int32" c:type="gint32"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint32"
              c:identifier="g_data_input_stream_read_uint32">
        <return-value>
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int64" c:identifier="g_data_input_stream_read_int64">
        <return-value>
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint64"
              c:identifier="g_data_input_stream_read_uint64">
        <return-value>
          <type name="uint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_line" c:identifier="g_data_input_stream_read_line">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="length">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_until" c:identifier="g_data_input_stream_read_until">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataInputStream" c:type="GDataInputStream*"/>
          </parameter>
          <parameter name="stop_chars">
            <type name="string" c:type="gchar*"/>
          </parameter>
          <parameter name="length">
            <type name="size_t" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <property name="byte-order">
        <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
      </property>
      <property name="newline-type">
        <type name="DataStreamNewlineType" c:type="GDataStreamNewlineType"/>
      </property>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="DataInputStreamClass" c:type="GDataInputStreamClass">
      <field name="parent_class">
        <type name="BufferedInputStreamClass"
              c:type="GBufferedInputStreamClass"/>
      </field>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="DataInputStreamPrivate" c:type="GDataInputStreamPrivate"/>
    <enumeration name="DataStreamByteOrder"
                 c:type="GDataStreamByteOrder"
                 glib:type-name="GDataStreamByteOrder"
                 glib:get-type="g_data_stream_byte_order_get_type">
      <member name="big-endian"
              value="0"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN"
              glib:nick="big-endian"/>
      <member name="little-endian"
              value="1"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN"
              glib:nick="little-endian"/>
      <member name="host-endian"
              value="2"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN"
              glib:nick="host-endian"/>
    </enumeration>
    <enumeration name="DataStreamNewlineType"
                 c:type="GDataStreamNewlineType"
                 glib:type-name="GDataStreamNewlineType"
                 glib:get-type="g_data_stream_newline_type_get_type">
      <member name="lf"
              value="0"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_LF"
              glib:nick="lf"/>
      <member name="cr"
              value="1"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_CR"
              glib:nick="cr"/>
      <member name="cr-lf"
              value="2"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_CR_LF"
              glib:nick="cr-lf"/>
      <member name="any"
              value="3"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_ANY"
              glib:nick="any"/>
    </enumeration>
    <class name="DataOutputStream"
           c:type="GDataOutputStream"
           parent="FilterOutputStream"
           glib:type-name="GDataOutputStream"
           glib:get-type="g_data_output_stream_get_type">
      <constructor name="new" c:identifier="g_data_output_stream_new">
        <return-value>
          <type name="DataOutputStream" c:type="GDataOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_byte_order"
              c:identifier="g_data_output_stream_set_byte_order">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="order">
            <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="g_data_output_stream_get_byte_order">
        <return-value>
          <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_byte" c:identifier="g_data_output_stream_put_byte">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="GLib.uchar" c:type="guchar"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int16" c:identifier="g_data_output_stream_put_int16">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="int16" c:type="gint16"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint16" c:identifier="g_data_output_stream_put_uint16">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int32" c:identifier="g_data_output_stream_put_int32">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="int32" c:type="gint32"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint32" c:identifier="g_data_output_stream_put_uint32">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int64" c:identifier="g_data_output_stream_put_int64">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint64" c:identifier="g_data_output_stream_put_uint64">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_string" c:identifier="g_data_output_stream_put_string">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="DataOutputStream" c:type="GDataOutputStream*"/>
          </parameter>
          <parameter name="str">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <property name="byte-order">
        <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
      </property>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="DataOutputStreamClass" c:type="GDataOutputStreamClass">
      <field name="parent_class">
        <type name="FilterOutputStreamClass"
              c:type="GFilterOutputStreamClass"/>
      </field>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="DataOutputStreamPrivate" c:type="GDataOutputStreamPrivate"/>
    <enumeration name="FileAttributeType"
                 c:type="GFileAttributeType"
                 glib:type-name="GFileAttributeType"
                 glib:get-type="g_file_attribute_type_get_type">
      <member name="invalid"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="string"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_STRING"
              glib:nick="string"/>
      <member name="byte-string"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_BYTE_STRING"
              glib:nick="byte-string"/>
      <member name="boolean"
              value="3"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_BOOLEAN"
              glib:nick="boolean"/>
      <member name="uint32"
              value="4"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_UINT32"
              glib:nick="uint32"/>
      <member name="int32"
              value="5"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INT32"
              glib:nick="int32"/>
      <member name="uint64"
              value="6"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_UINT64"
              glib:nick="uint64"/>
      <member name="int64"
              value="7"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INT64"
              glib:nick="int64"/>
      <member name="object"
              value="8"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_OBJECT"
              glib:nick="object"/>
    </enumeration>
    <bitfield name="FileAttributeInfoFlags"
              c:type="GFileAttributeInfoFlags"
              glib:type-name="GFileAttributeInfoFlags"
              glib:get-type="g_file_attribute_info_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_INFO_NONE"
              glib:nick="none"/>
      <member name="copy-with-file"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE"
              glib:nick="copy-with-file"/>
      <member name="copy-when-moved"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED"
              glib:nick="copy-when-moved"/>
    </bitfield>
    <enumeration name="FileAttributeStatus"
                 c:type="GFileAttributeStatus"
                 glib:type-name="GFileAttributeStatus"
                 glib:get-type="g_file_attribute_status_get_type">
      <member name="unset"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_UNSET"
              glib:nick="unset"/>
      <member name="set"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_SET"
              glib:nick="set"/>
      <member name="error-setting"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING"
              glib:nick="error-setting"/>
    </enumeration>
    <record name="FileAttributeInfo" c:type="GFileAttributeInfo"/>
    <record name="FileAttributeInfoList" c:type="GFileAttributeInfoList"/>
    <function name="file_attribute_info_list_new"
              c:identifier="g_file_attribute_info_list_new">
      <return-value>
        <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
      </return-value>
    </function>
    <function name="file_attribute_info_list_ref"
              c:identifier="g_file_attribute_info_list_ref">
      <return-value>
        <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
      </return-value>
      <parameters>
        <parameter name="list">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_info_list_unref"
              c:identifier="g_file_attribute_info_list_unref">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="list">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_info_list_dup"
              c:identifier="g_file_attribute_info_list_dup">
      <return-value>
        <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
      </return-value>
      <parameters>
        <parameter name="list">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_info_list_lookup"
              c:identifier="g_file_attribute_info_list_lookup">
      <return-value>
        <type name="FileAttributeInfo" c:type="GFileAttributeInfo*"/>
      </return-value>
      <parameters>
        <parameter name="list">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </parameter>
        <parameter name="name">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_info_list_add"
              c:identifier="g_file_attribute_info_list_add">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="list">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </parameter>
        <parameter name="name">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="type">
          <type name="FileAttributeType" c:type="GFileAttributeType"/>
        </parameter>
        <parameter name="flags">
          <type name="FileAttributeInfoFlags"
                c:type="GFileAttributeInfoFlags"/>
        </parameter>
      </parameters>
    </function>
    <class name="FileInfo"
           c:type="GFileInfo"
           parent="GObject.Object"
           glib:type-name="GFileInfo"
           glib:get-type="g_file_info_get_type">
      <constructor name="new" c:identifier="g_file_info_new">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
      </constructor>
      <constructor name="dup" c:identifier="g_file_info_dup">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="other">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy_into" c:identifier="g_file_info_copy_into">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="src_info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="dest_info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_attribute" c:identifier="g_file_info_has_attribute">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_attributes"
              c:identifier="g_file_info_list_attributes">
        <return-value>
          <type name="int8" c:type="char**"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="name_space">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_data"
              c:identifier="g_file_info_get_attribute_data">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="type">
            <type name="FileAttributeType" c:type="GFileAttributeType*"/>
          </parameter>
          <parameter name="value_pp">
            <type name="any" c:type="gpointer*"/>
          </parameter>
          <parameter name="status">
            <type name="FileAttributeStatus" c:type="GFileAttributeStatus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_type"
              c:identifier="g_file_info_get_attribute_type">
        <return-value>
          <type name="FileAttributeType" c:type="GFileAttributeType"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_attribute"
              c:identifier="g_file_info_remove_attribute">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_status"
              c:identifier="g_file_info_get_attribute_status">
        <return-value>
          <type name="FileAttributeStatus" c:type="GFileAttributeStatus"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_as_string"
              c:identifier="g_file_info_get_attribute_as_string">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_string"
              c:identifier="g_file_info_get_attribute_string">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_byte_string"
              c:identifier="g_file_info_get_attribute_byte_string">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_boolean"
              c:identifier="g_file_info_get_attribute_boolean">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_uint32"
              c:identifier="g_file_info_get_attribute_uint32">
        <return-value>
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_int32"
              c:identifier="g_file_info_get_attribute_int32">
        <return-value>
          <type name="int32" c:type="gint32"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_uint64"
              c:identifier="g_file_info_get_attribute_uint64">
        <return-value>
          <type name="uint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_int64"
              c:identifier="g_file_info_get_attribute_int64">
        <return-value>
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_object"
              c:identifier="g_file_info_get_attribute_object">
        <return-value>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute" c:identifier="g_file_info_set_attribute">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="type">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_string"
              c:identifier="g_file_info_set_attribute_string">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_byte_string"
              c:identifier="g_file_info_set_attribute_byte_string">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_boolean"
              c:identifier="g_file_info_set_attribute_boolean">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint32"
              c:identifier="g_file_info_set_attribute_uint32">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int32"
              c:identifier="g_file_info_set_attribute_int32">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint64"
              c:identifier="g_file_info_set_attribute_uint64">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int64"
              c:identifier="g_file_info_set_attribute_int64">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_object"
              c:identifier="g_file_info_set_attribute_object">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="attr_value">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_status" c:identifier="g_file_info_clear_status">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_type" c:identifier="g_file_info_get_file_type">
        <return-value>
          <type name="FileType" c:type="GFileType"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_is_hidden" c:identifier="g_file_info_get_is_hidden">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_is_backup" c:identifier="g_file_info_get_is_backup">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_is_symlink" c:identifier="g_file_info_get_is_symlink">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="g_file_info_get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="g_file_info_get_display_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_edit_name" c:identifier="g_file_info_get_edit_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon" c:identifier="g_file_info_get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_content_type"
              c:identifier="g_file_info_get_content_type">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="g_file_info_get_size">
        <return-value>
          <type name="goffset" c:type="goffset"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_modification_time"
              c:identifier="g_file_info_get_modification_time">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="result">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_symlink_target"
              c:identifier="g_file_info_get_symlink_target">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_etag" c:identifier="g_file_info_get_etag">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sort_order" c:identifier="g_file_info_get_sort_order">
        <return-value>
          <type name="int32" c:type="gint32"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_mask"
              c:identifier="g_file_info_set_attribute_mask">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="mask">
            <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unset_attribute_mask"
              c:identifier="g_file_info_unset_attribute_mask">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_file_type" c:identifier="g_file_info_set_file_type">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="type">
            <type name="FileType" c:type="GFileType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_hidden" c:identifier="g_file_info_set_is_hidden">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="is_hidden">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_symlink" c:identifier="g_file_info_set_is_symlink">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="is_symlink">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="g_file_info_set_name">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="name">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name"
              c:identifier="g_file_info_set_display_name">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="display_name">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_edit_name" c:identifier="g_file_info_set_edit_name">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="edit_name">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon" c:identifier="g_file_info_set_icon">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="icon">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_type"
              c:identifier="g_file_info_set_content_type">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="content_type">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="g_file_info_set_size">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="size">
            <type name="goffset" c:type="goffset"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modification_time"
              c:identifier="g_file_info_set_modification_time">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="mtime">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_symlink_target"
              c:identifier="g_file_info_set_symlink_target">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="symlink_target">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sort_order" c:identifier="g_file_info_set_sort_order">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="sort_order">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="FileInfoClass" c:type="GFileInfoClass"/>
    <record name="FileAttributeMatcher" c:type="GFileAttributeMatcher"/>
    <enumeration name="FileType"
                 c:type="GFileType"
                 glib:type-name="GFileType"
                 glib:get-type="g_file_type_get_type">
      <member name="unknown"
              value="0"
              c:identifier="G_FILE_TYPE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="regular"
              value="1"
              c:identifier="G_FILE_TYPE_REGULAR"
              glib:nick="regular"/>
      <member name="directory"
              value="2"
              c:identifier="G_FILE_TYPE_DIRECTORY"
              glib:nick="directory"/>
      <member name="symbolic-link"
              value="3"
              c:identifier="G_FILE_TYPE_SYMBOLIC_LINK"
              glib:nick="symbolic-link"/>
      <member name="special"
              value="4"
              c:identifier="G_FILE_TYPE_SPECIAL"
              glib:nick="special"/>
      <member name="shortcut"
              value="5"
              c:identifier="G_FILE_TYPE_SHORTCUT"
              glib:nick="shortcut"/>
      <member name="mountable"
              value="6"
              c:identifier="G_FILE_TYPE_MOUNTABLE"
              glib:nick="mountable"/>
    </enumeration>
    <enumeration name="FilesystemPreviewType"
                 c:type="GFilesystemPreviewType"
                 glib:type-name="GFilesystemPreviewType"
                 glib:get-type="g_filesystem_preview_type_get_type">
      <member name="if-always"
              value="0"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS"
              glib:nick="if-always"/>
      <member name="if-local"
              value="1"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL"
              glib:nick="if-local"/>
      <member name="never"
              value="2"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_NEVER"
              glib:nick="never"/>
    </enumeration>
    <function name="file_attribute_matcher_new"
              c:identifier="g_file_attribute_matcher_new">
      <return-value>
        <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
      </return-value>
      <parameters>
        <parameter name="attributes">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_matcher_ref"
              c:identifier="g_file_attribute_matcher_ref">
      <return-value>
        <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
      </return-value>
      <parameters>
        <parameter name="matcher">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_matcher_unref"
              c:identifier="g_file_attribute_matcher_unref">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="matcher">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_matcher_matches"
              c:identifier="g_file_attribute_matcher_matches">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="matcher">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_matcher_matches_only"
              c:identifier="g_file_attribute_matcher_matches_only">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="matcher">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_matcher_enumerate_namespace"
              c:identifier="g_file_attribute_matcher_enumerate_namespace">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="matcher">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </parameter>
        <parameter name="ns">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_attribute_matcher_enumerate_next"
              c:identifier="g_file_attribute_matcher_enumerate_next">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="matcher">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </parameter>
      </parameters>
    </function>
    <class name="FileEnumerator"
           c:type="GFileEnumerator"
           parent="GObject.Object"
           glib:type-name="GFileEnumerator"
           glib:get-type="g_file_enumerator_get_type">
      <method name="next_file" c:identifier="g_file_enumerator_next_file">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_file_enumerator_close">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_files_async"
              c:identifier="g_file_enumerator_next_files_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="num_files">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_files_finish"
              c:identifier="g_file_enumerator_next_files_finish">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_file_enumerator_close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_file_enumerator_close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_file_enumerator_is_closed">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_pending" c:identifier="g_file_enumerator_has_pending">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pending" c:identifier="g_file_enumerator_set_pending">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="pending">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <callback name="next_file" c:type="next_file">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_fn" c:type="close_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="next_files_async" c:type="next_files_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="num_files">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="next_files_finish" c:type="next_files_finish">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_async" c:type="close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_finish" c:type="close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="FileEnumeratorClass" c:type="GFileEnumeratorClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="next_file" c:type="next_file">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_fn" c:type="close_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="next_files_async" c:type="next_files_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="num_files">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="next_files_finish" c:type="next_files_finish">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_async" c:type="close_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="close_finish" c:type="close_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="enumerator">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="FileEnumeratorPrivate" c:type="GFileEnumeratorPrivate"/>
    <class name="FileInputStream"
           c:type="GFileInputStream"
           parent="InputStream"
           glib:type-name="GFileInputStream"
           glib:get-type="g_file_input_stream_get_type">
      <method name="query_info" c:identifier="g_file_input_stream_query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_input_stream_query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_input_stream_query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <callback name="tell" c:type="tell">
        <return-value>
          <type name="goffset" c:type="goffset"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_seek" c:type="can_seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="seek" c:type="seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="type">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info" c:type="query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_async" c:type="query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_finish" c:type="query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="FileInputStreamClass" c:type="GFileInputStreamClass">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <callback name="tell" c:type="tell">
        <return-value>
          <type name="goffset" c:type="goffset"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_seek" c:type="can_seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="seek" c:type="seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="type">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info" c:type="query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_async" c:type="query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_finish" c:type="query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="FileInputStreamPrivate" c:type="GFileInputStreamPrivate"/>
    <class name="FileOutputStream"
           c:type="GFileOutputStream"
           parent="OutputStream"
           glib:type-name="GFileOutputStream"
           glib:get-type="g_file_output_stream_get_type">
      <method name="query_info" c:identifier="g_file_output_stream_query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_output_stream_query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_output_stream_query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_etag" c:identifier="g_file_output_stream_get_etag">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <callback name="tell" c:type="tell">
        <return-value>
          <type name="goffset" c:type="goffset"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_seek" c:type="can_seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="seek" c:type="seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="type">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_truncate" c:type="can_truncate">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="truncate_fn" c:type="truncate_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="size">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info" c:type="query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_async" c:type="query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_finish" c:type="query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_etag" c:type="get_etag">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="FileOutputStreamClass" c:type="GFileOutputStreamClass">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <callback name="tell" c:type="tell">
        <return-value>
          <type name="goffset" c:type="goffset"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_seek" c:type="can_seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="seek" c:type="seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="type">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_truncate" c:type="can_truncate">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="truncate_fn" c:type="truncate_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="size">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info" c:type="query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_async" c:type="query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_finish" c:type="query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_etag" c:type="get_etag">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="FileOutputStreamPrivate" c:type="GFileOutputStreamPrivate"/>
    <class name="MountOperation"
           c:type="GMountOperation"
           parent="GObject.Object"
           glib:type-name="GMountOperation"
           glib:get-type="g_mount_operation_get_type">
      <constructor name="new" c:identifier="g_mount_operation_new">
        <return-value>
          <type name="MountOperation" c:type="GMountOperation*"/>
        </return-value>
      </constructor>
      <method name="get_username"
              c:identifier="g_mount_operation_get_username">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_username"
              c:identifier="g_mount_operation_set_username">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="username">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_password"
              c:identifier="g_mount_operation_get_password">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password"
              c:identifier="g_mount_operation_set_password">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="password">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_anonymous"
              c:identifier="g_mount_operation_get_anonymous">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_anonymous"
              c:identifier="g_mount_operation_set_anonymous">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="anonymous">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_domain" c:identifier="g_mount_operation_get_domain">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_domain" c:identifier="g_mount_operation_set_domain">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="domain">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_password_save"
              c:identifier="g_mount_operation_get_password_save">
        <return-value>
          <type name="PasswordSave" c:type="GPasswordSave"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password_save"
              c:identifier="g_mount_operation_set_password_save">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="save">
            <type name="PasswordSave" c:type="GPasswordSave"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_choice" c:identifier="g_mount_operation_get_choice">
        <return-value>
          <type name="int" c:type="int"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_choice" c:identifier="g_mount_operation_set_choice">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="choice">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="reply" c:identifier="g_mount_operation_reply">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="result">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </method>
      <property name="username">
        <type name="string" c:type="gchararray"/>
      </property>
      <property name="password">
        <type name="string" c:type="gchararray"/>
      </property>
      <property name="anonymous">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="domain">
        <type name="string" c:type="gchararray"/>
      </property>
      <property name="password-save">
        <type name="PasswordSave" c:type="GPasswordSave"/>
      </property>
      <property name="choice">
        <type name="int" c:type="gint"/>
      </property>
      <callback name="ask_password" c:type="ask_password">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="message">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="default_user">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="default_domain">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="AskPasswordFlags" c:type="GAskPasswordFlags"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="ask_question" c:type="ask_question">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="message">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="choices">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="reply" c:type="reply">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="result">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved9" c:type="_g_reserved9">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved10" c:type="_g_reserved10">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved11" c:type="_g_reserved11">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved12" c:type="_g_reserved12">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <glib:signal name="ask-password">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="string" c:type="gchararray"/>
          </parameter>
          <parameter name="p0">
            <type name="string" c:type="gchararray"/>
          </parameter>
          <parameter name="p1">
            <type name="string" c:type="gchararray"/>
          </parameter>
          <parameter name="p2">
            <type name="AskPasswordFlags" c:type="GAskPasswordFlags"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ask-question">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="string" c:type="gchararray"/>
          </parameter>
          <parameter name="p0">
            <type name="GObject.Strv" c:type="GStrv"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="reply">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MountOperationClass" c:type="GMountOperationClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="ask_password" c:type="ask_password">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="message">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="default_user">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="default_domain">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="AskPasswordFlags" c:type="GAskPasswordFlags"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="ask_question" c:type="ask_question">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="message">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="choices">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="reply" c:type="reply">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="result">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved9" c:type="_g_reserved9">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved10" c:type="_g_reserved10">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved11" c:type="_g_reserved11">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved12" c:type="_g_reserved12">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="MountOperationPrivate" c:type="GMountOperationPrivate"/>
    <bitfield name="AskPasswordFlags"
              c:type="GAskPasswordFlags"
              glib:type-name="GAskPasswordFlags"
              glib:get-type="g_ask_password_flags_get_type">
      <member name="need-password"
              value="1"
              c:identifier="G_ASK_PASSWORD_NEED_PASSWORD"
              glib:nick="need-password"/>
      <member name="need-username"
              value="2"
              c:identifier="G_ASK_PASSWORD_NEED_USERNAME"
              glib:nick="need-username"/>
      <member name="need-domain"
              value="4"
              c:identifier="G_ASK_PASSWORD_NEED_DOMAIN"
              glib:nick="need-domain"/>
      <member name="saving-supported"
              value="8"
              c:identifier="G_ASK_PASSWORD_SAVING_SUPPORTED"
              glib:nick="saving-supported"/>
      <member name="anonymous-supported"
              value="16"
              c:identifier="G_ASK_PASSWORD_ANONYMOUS_SUPPORTED"
              glib:nick="anonymous-supported"/>
    </bitfield>
    <enumeration name="PasswordSave"
                 c:type="GPasswordSave"
                 glib:type-name="GPasswordSave"
                 glib:get-type="g_password_save_get_type">
      <member name="never"
              value="0"
              c:identifier="G_PASSWORD_SAVE_NEVER"
              glib:nick="never"/>
      <member name="for-session"
              value="1"
              c:identifier="G_PASSWORD_SAVE_FOR_SESSION"
              glib:nick="for-session"/>
      <member name="permanently"
              value="2"
              c:identifier="G_PASSWORD_SAVE_PERMANENTLY"
              glib:nick="permanently"/>
    </enumeration>
    <enumeration name="MountOperationResult"
                 c:type="GMountOperationResult"
                 glib:type-name="GMountOperationResult"
                 glib:get-type="g_mount_operation_result_get_type">
      <member name="handled"
              value="0"
              c:identifier="G_MOUNT_OPERATION_HANDLED"
              glib:nick="handled"/>
      <member name="aborted"
              value="1"
              c:identifier="G_MOUNT_OPERATION_ABORTED"
              glib:nick="aborted"/>
      <member name="unhandled"
              value="2"
              c:identifier="G_MOUNT_OPERATION_UNHANDLED"
              glib:nick="unhandled"/>
    </enumeration>
    <bitfield name="FileQueryInfoFlags"
              c:type="GFileQueryInfoFlags"
              glib:type-name="GFileQueryInfoFlags"
              glib:get-type="g_file_query_info_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_FILE_QUERY_INFO_NONE"
              glib:nick="none"/>
      <member name="nofollow-symlinks"
              value="1"
              c:identifier="G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS"
              glib:nick="nofollow-symlinks"/>
    </bitfield>
    <bitfield name="FileCreateFlags"
              c:type="GFileCreateFlags"
              glib:type-name="GFileCreateFlags"
              glib:get-type="g_file_create_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_FILE_CREATE_NONE"
              glib:nick="none"/>
      <member name="private"
              value="1"
              c:identifier="G_FILE_CREATE_PRIVATE"
              glib:nick="private"/>
    </bitfield>
    <enumeration name="MountMountFlags"
                 c:type="GMountMountFlags"
                 glib:type-name="GMountMountFlags"
                 glib:get-type="g_mount_mount_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_MOUNT_MOUNT_NONE"
              glib:nick="none"/>
    </enumeration>
    <bitfield name="MountUnmountFlags"
              c:type="GMountUnmountFlags"
              glib:type-name="GMountUnmountFlags"
              glib:get-type="g_mount_unmount_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_MOUNT_UNMOUNT_NONE"
              glib:nick="none"/>
      <member name="force"
              value="1"
              c:identifier="G_MOUNT_UNMOUNT_FORCE"
              glib:nick="force"/>
    </bitfield>
    <bitfield name="FileCopyFlags"
              c:type="GFileCopyFlags"
              glib:type-name="GFileCopyFlags"
              glib:get-type="g_file_copy_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_FILE_COPY_NONE"
              glib:nick="none"/>
      <member name="overwrite"
              value="1"
              c:identifier="G_FILE_COPY_OVERWRITE"
              glib:nick="overwrite"/>
      <member name="backup"
              value="2"
              c:identifier="G_FILE_COPY_BACKUP"
              glib:nick="backup"/>
      <member name="nofollow-symlinks"
              value="4"
              c:identifier="G_FILE_COPY_NOFOLLOW_SYMLINKS"
              glib:nick="nofollow-symlinks"/>
      <member name="all-metadata"
              value="8"
              c:identifier="G_FILE_COPY_ALL_METADATA"
              glib:nick="all-metadata"/>
      <member name="no-fallback-for-move"
              value="16"
              c:identifier="G_FILE_COPY_NO_FALLBACK_FOR_MOVE"
              glib:nick="no-fallback-for-move"/>
    </bitfield>
    <bitfield name="FileMonitorFlags"
              c:type="GFileMonitorFlags"
              glib:type-name="GFileMonitorFlags"
              glib:get-type="g_file_monitor_flags_get_type">
      <member name="none"
              value="0"
              c:identifier="G_FILE_MONITOR_NONE"
              glib:nick="none"/>
      <member name="watch-mounts"
              value="1"
              c:identifier="G_FILE_MONITOR_WATCH_MOUNTS"
              glib:nick="watch-mounts"/>
    </bitfield>
    <interface name="File"
               c:type="GFile"
               glib:type-name="GFile"
               glib:get-type="g_file_get_type">
      <callback name="dup" c:type="dup">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="hash" c:type="hash">
        <return-value>
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="equal" c:type="equal">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file1">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="file2">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_native" c:type="is_native">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="has_uri_scheme" c:type="has_uri_scheme">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="uri_scheme">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uri_scheme" c:type="get_uri_scheme">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_basename" c:type="get_basename">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_path" c:type="get_path">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uri" c:type="get_uri">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_parse_name" c:type="get_parse_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_parent" c:type="get_parent">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="prefix_matches" c:type="prefix_matches">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prefix">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_relative_path" c:type="get_relative_path">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="parent">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="descendant">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="resolve_relative_path" c:type="resolve_relative_path">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="relative_path">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_child_for_display_name"
                c:type="get_child_for_display_name">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="display_name">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_children" c:type="enumerate_children">
        <return-value>
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_children_async"
                c:type="enumerate_children_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_children_finish"
                c:type="enumerate_children_finish">
        <return-value>
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info" c:type="query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_async" c:type="query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_finish" c:type="query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_filesystem_info" c:type="query_filesystem_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_filesystem_info_async"
                c:type="query_filesystem_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_filesystem_info_finish"
                c:type="query_filesystem_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="find_enclosing_mount" c:type="find_enclosing_mount">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="find_enclosing_mount_async"
                c:type="find_enclosing_mount_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="find_enclosing_mount_finish"
                c:type="find_enclosing_mount_finish">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_display_name" c:type="set_display_name">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="display_name">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_display_name_async" c:type="set_display_name_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="display_name">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_display_name_finish"
                c:type="set_display_name_finish">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_settable_attributes"
                c:type="query_settable_attributes">
        <return-value>
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_settable_attributes_async"
                c:type="_query_settable_attributes_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="query_settable_attributes_finish"
                c:type="_query_settable_attributes_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="query_writable_namespaces"
                c:type="query_writable_namespaces">
        <return-value>
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_writable_namespaces_async"
                c:type="_query_writable_namespaces_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="query_writable_namespaces_finish"
                c:type="_query_writable_namespaces_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="set_attribute" c:type="set_attribute">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="type">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_attributes_from_info"
                c:type="set_attributes_from_info">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_attributes_async" c:type="set_attributes_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_attributes_finish" c:type="set_attributes_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo**"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_fn" c:type="read_fn">
        <return-value>
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_async" c:type="read_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_finish" c:type="read_finish">
        <return-value>
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="append_to" c:type="append_to">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="append_to_async" c:type="append_to_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="append_to_finish" c:type="append_to_finish">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="create" c:type="create">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="create_async" c:type="create_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="create_finish" c:type="create_finish">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="replace" c:type="replace">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="etag">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="make_backup">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="replace_async" c:type="replace_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="etag">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="make_backup">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="replace_finish" c:type="replace_finish">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="delete_file" c:type="delete_file">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="delete_file_async" c:type="_delete_file_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="delete_file_finish" c:type="_delete_file_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="trash" c:type="trash">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="trash_async" c:type="_trash_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="trash_finish" c:type="_trash_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_directory" c:type="make_directory">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="make_directory_async" c:type="_make_directory_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_directory_finish" c:type="_make_directory_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_symbolic_link" c:type="make_symbolic_link">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="symlink_value">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="make_symbolic_link_async"
                c:type="_make_symbolic_link_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_symbolic_link_finish"
                c:type="_make_symbolic_link_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="copy" c:type="copy">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="source">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="destination">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="copy_async" c:type="copy_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="destination">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="copy_finish" c:type="copy_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="move" c:type="move">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="source">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="destination">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="move_async" c:type="_move_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="move_finish" c:type="_move_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="mount_mountable" c:type="mount_mountable">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_mountable_finish" c:type="mount_mountable_finish">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount_mountable" c:type="unmount_mountable">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount_mountable_finish"
                c:type="unmount_mountable_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_mountable" c:type="eject_mountable">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_mountable_finish" c:type="eject_mountable_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_enclosing_volume" c:type="mount_enclosing_volume">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="location">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_enclosing_volume_finish"
                c:type="mount_enclosing_volume_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="location">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="monitor_dir" c:type="monitor_dir">
        <return-value>
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="monitor_file" c:type="monitor_file">
        <return-value>
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </interface>
    <record name="FileIface" c:type="GFileIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="dup" c:type="dup">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="hash" c:type="hash">
        <return-value>
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="equal" c:type="equal">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file1">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="file2">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_native" c:type="is_native">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="has_uri_scheme" c:type="has_uri_scheme">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="uri_scheme">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uri_scheme" c:type="get_uri_scheme">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_basename" c:type="get_basename">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_path" c:type="get_path">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uri" c:type="get_uri">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_parse_name" c:type="get_parse_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_parent" c:type="get_parent">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="prefix_matches" c:type="prefix_matches">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prefix">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_relative_path" c:type="get_relative_path">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="parent">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="descendant">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="resolve_relative_path" c:type="resolve_relative_path">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="relative_path">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_child_for_display_name"
                c:type="get_child_for_display_name">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="display_name">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_children" c:type="enumerate_children">
        <return-value>
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_children_async"
                c:type="enumerate_children_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_children_finish"
                c:type="enumerate_children_finish">
        <return-value>
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info" c:type="query_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_async" c:type="query_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_info_finish" c:type="query_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_filesystem_info" c:type="query_filesystem_info">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_filesystem_info_async"
                c:type="query_filesystem_info_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attributes">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_filesystem_info_finish"
                c:type="query_filesystem_info_finish">
        <return-value>
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="find_enclosing_mount" c:type="find_enclosing_mount">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="find_enclosing_mount_async"
                c:type="find_enclosing_mount_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="find_enclosing_mount_finish"
                c:type="find_enclosing_mount_finish">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_display_name" c:type="set_display_name">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="display_name">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_display_name_async" c:type="set_display_name_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="display_name">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_display_name_finish"
                c:type="set_display_name_finish">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_settable_attributes"
                c:type="query_settable_attributes">
        <return-value>
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_settable_attributes_async"
                c:type="_query_settable_attributes_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="query_settable_attributes_finish"
                c:type="_query_settable_attributes_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="query_writable_namespaces"
                c:type="query_writable_namespaces">
        <return-value>
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="query_writable_namespaces_async"
                c:type="_query_writable_namespaces_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="query_writable_namespaces_finish"
                c:type="_query_writable_namespaces_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="set_attribute" c:type="set_attribute">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="attribute">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="type">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_attributes_from_info"
                c:type="set_attributes_from_info">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_attributes_async" c:type="set_attributes_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="set_attributes_finish" c:type="set_attributes_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="info">
            <type name="FileInfo" c:type="GFileInfo**"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_fn" c:type="read_fn">
        <return-value>
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_async" c:type="read_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="read_finish" c:type="read_finish">
        <return-value>
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="append_to" c:type="append_to">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="append_to_async" c:type="append_to_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="append_to_finish" c:type="append_to_finish">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="create" c:type="create">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="create_async" c:type="create_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="create_finish" c:type="create_finish">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="replace" c:type="replace">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="etag">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="make_backup">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="replace_async" c:type="replace_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="etag">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="make_backup">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="replace_finish" c:type="replace_finish">
        <return-value>
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="delete_file" c:type="delete_file">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="delete_file_async" c:type="_delete_file_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="delete_file_finish" c:type="_delete_file_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="trash" c:type="trash">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="trash_async" c:type="_trash_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="trash_finish" c:type="_trash_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_directory" c:type="make_directory">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="make_directory_async" c:type="_make_directory_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_directory_finish" c:type="_make_directory_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_symbolic_link" c:type="make_symbolic_link">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="symlink_value">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="make_symbolic_link_async"
                c:type="_make_symbolic_link_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="make_symbolic_link_finish"
                c:type="_make_symbolic_link_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="copy" c:type="copy">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="source">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="destination">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="copy_async" c:type="copy_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="destination">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="copy_finish" c:type="copy_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="move" c:type="move">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="source">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="destination">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="move_async" c:type="_move_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="move_finish" c:type="_move_finish">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="mount_mountable" c:type="mount_mountable">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_mountable_finish" c:type="mount_mountable_finish">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount_mountable" c:type="unmount_mountable">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount_mountable_finish"
                c:type="unmount_mountable_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_mountable" c:type="eject_mountable">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_mountable_finish" c:type="eject_mountable_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_enclosing_volume" c:type="mount_enclosing_volume">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="location">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_enclosing_volume_finish"
                c:type="mount_enclosing_volume_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="location">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="monitor_dir" c:type="monitor_dir">
        <return-value>
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="monitor_file" c:type="monitor_file">
        <return-value>
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <class name="FileMonitor"
           c:type="GFileMonitor"
           parent="GObject.Object"
           glib:type-name="GFileMonitor"
           glib:get-type="g_file_monitor_get_type">
      <method name="cancel" c:identifier="g_file_monitor_cancel">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_cancelled" c:identifier="g_file_monitor_is_cancelled">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rate_limit"
              c:identifier="g_file_monitor_set_rate_limit">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
          <parameter name="limit_msecs">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_event" c:identifier="g_file_monitor_emit_event">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
          <parameter name="child">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="other_file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="event_type">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </method>
      <property name="rate-limit">
        <type name="int" c:type="gint"/>
      </property>
      <property name="cancelled">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="other_file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="event_type">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="cancel" c:type="cancel">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <glib:signal name="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="File" c:type="GFile"/>
          </parameter>
          <parameter name="p0">
            <type name="File" c:type="GFile"/>
          </parameter>
          <parameter name="p1">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <interface name="Mount"
               c:type="GMount"
               glib:type-name="GMount"
               glib:get-type="g_mount_get_type">
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmounted" c:type="unmounted">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_root" c:type="get_root">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uuid" c:type="get_uuid">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volume" c:type="get_volume">
        <return-value>
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_drive" c:type="get_drive">
        <return-value>
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_unmount" c:type="can_unmount">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_eject" c:type="can_eject">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount" c:type="unmount">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount_finish" c:type="unmount_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject" c:type="eject">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_finish" c:type="eject_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="remount" c:type="remount">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="remount_finish" c:type="remount_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <glib:signal name="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="unmounted">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <callback name="FileProgressCallback" c:type="GFileProgressCallback">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="current_num_bytes">
          <type name="goffset" c:type="goffset"/>
        </parameter>
        <parameter name="total_num_bytes">
          <type name="goffset" c:type="goffset"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="FileReadMoreCallback" c:type="GFileReadMoreCallback">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file_contents">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="file_size">
          <type name="goffset" c:type="goffset"/>
        </parameter>
        <parameter name="callback_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function name="file_new_for_path" c:identifier="g_file_new_for_path">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="path">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_uri" c:identifier="g_file_new_for_uri">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="uri">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_commandline_arg"
              c:identifier="g_file_new_for_commandline_arg">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="arg">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_parse_name" c:identifier="g_file_parse_name">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="parse_name">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_dup" c:identifier="g_file_dup">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_hash" c:identifier="g_file_hash">
      <return-value>
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_equal" c:identifier="g_file_equal">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file1">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="file2">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_basename" c:identifier="g_file_get_basename">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_path" c:identifier="g_file_get_path">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_uri" c:identifier="g_file_get_uri">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_parse_name" c:identifier="g_file_get_parse_name">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_parent" c:identifier="g_file_get_parent">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_child" c:identifier="g_file_get_child">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="name">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_child_for_display_name"
              c:identifier="g_file_get_child_for_display_name">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="display_name">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_has_prefix" c:identifier="g_file_has_prefix">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="prefix">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_relative_path"
              c:identifier="g_file_get_relative_path">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="parent">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="descendant">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_resolve_relative_path"
              c:identifier="g_file_resolve_relative_path">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="relative_path">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_is_native" c:identifier="g_file_is_native">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_has_uri_scheme" c:identifier="g_file_has_uri_scheme">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="uri_scheme">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_get_uri_scheme" c:identifier="g_file_get_uri_scheme">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_read" c:identifier="g_file_read">
      <return-value>
        <type name="FileInputStream" c:type="GFileInputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_read_async" c:identifier="g_file_read_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_read_finish" c:identifier="g_file_read_finish">
      <return-value>
        <type name="FileInputStream" c:type="GFileInputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_append_to" c:identifier="g_file_append_to">
      <return-value>
        <type name="FileOutputStream" c:type="GFileOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_create" c:identifier="g_file_create">
      <return-value>
        <type name="FileOutputStream" c:type="GFileOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_replace" c:identifier="g_file_replace">
      <return-value>
        <type name="FileOutputStream" c:type="GFileOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="etag">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="make_backup">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_append_to_async"
              c:identifier="g_file_append_to_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_append_to_finish"
              c:identifier="g_file_append_to_finish">
      <return-value>
        <type name="FileOutputStream" c:type="GFileOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_create_async" c:identifier="g_file_create_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_create_finish" c:identifier="g_file_create_finish">
      <return-value>
        <type name="FileOutputStream" c:type="GFileOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_replace_async" c:identifier="g_file_replace_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="etag">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="make_backup">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_replace_finish" c:identifier="g_file_replace_finish">
      <return-value>
        <type name="FileOutputStream" c:type="GFileOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_exists" c:identifier="g_file_query_exists">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_info" c:identifier="g_file_query_info">
      <return-value>
        <type name="FileInfo" c:type="GFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attributes">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_info_async"
              c:identifier="g_file_query_info_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attributes">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_info_finish"
              c:identifier="g_file_query_info_finish">
      <return-value>
        <type name="FileInfo" c:type="GFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_filesystem_info"
              c:identifier="g_file_query_filesystem_info">
      <return-value>
        <type name="FileInfo" c:type="GFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attributes">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_filesystem_info_async"
              c:identifier="g_file_query_filesystem_info_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attributes">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_filesystem_info_finish"
              c:identifier="g_file_query_filesystem_info_finish">
      <return-value>
        <type name="FileInfo" c:type="GFileInfo*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_find_enclosing_mount"
              c:identifier="g_file_find_enclosing_mount">
      <return-value>
        <type name="Mount" c:type="GMount*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_find_enclosing_mount_async"
              c:identifier="g_file_find_enclosing_mount_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_find_enclosing_mount_finish"
              c:identifier="g_file_find_enclosing_mount_finish">
      <return-value>
        <type name="Mount" c:type="GMount*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_enumerate_children"
              c:identifier="g_file_enumerate_children">
      <return-value>
        <type name="FileEnumerator" c:type="GFileEnumerator*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attributes">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_enumerate_children_async"
              c:identifier="g_file_enumerate_children_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attributes">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_enumerate_children_finish"
              c:identifier="g_file_enumerate_children_finish">
      <return-value>
        <type name="FileEnumerator" c:type="GFileEnumerator*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_display_name"
              c:identifier="g_file_set_display_name">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="display_name">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_display_name_async"
              c:identifier="g_file_set_display_name_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="display_name">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_display_name_finish"
              c:identifier="g_file_set_display_name_finish">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_delete" c:identifier="g_file_delete">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_trash" c:identifier="g_file_trash">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_copy" c:identifier="g_file_copy">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="source">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="destination">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="progress_callback">
          <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_copy_async" c:identifier="g_file_copy_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="source">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="destination">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="progress_callback">
          <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_copy_finish" c:identifier="g_file_copy_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_move" c:identifier="g_file_move">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="source">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="destination">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="progress_callback">
          <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
        </parameter>
        <parameter name="progress_callback_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_make_directory" c:identifier="g_file_make_directory">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_make_symbolic_link"
              c:identifier="g_file_make_symbolic_link">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="symlink_value">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_settable_attributes"
              c:identifier="g_file_query_settable_attributes">
      <return-value>
        <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_writable_namespaces"
              c:identifier="g_file_query_writable_namespaces">
      <return-value>
        <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attribute" c:identifier="g_file_set_attribute">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="type">
          <type name="FileAttributeType" c:type="GFileAttributeType"/>
        </parameter>
        <parameter name="value_p">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attributes_from_info"
              c:identifier="g_file_set_attributes_from_info">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="info">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attributes_async"
              c:identifier="g_file_set_attributes_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="info">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attributes_finish"
              c:identifier="g_file_set_attributes_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="info">
          <type name="FileInfo" c:type="GFileInfo**"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attribute_string"
              c:identifier="g_file_set_attribute_string">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="value">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attribute_byte_string"
              c:identifier="g_file_set_attribute_byte_string">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="value">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attribute_uint32"
              c:identifier="g_file_set_attribute_uint32">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="value">
          <type name="uint32" c:type="guint32"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attribute_int32"
              c:identifier="g_file_set_attribute_int32">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="value">
          <type name="int32" c:type="gint32"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attribute_uint64"
              c:identifier="g_file_set_attribute_uint64">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="value">
          <type name="uint64" c:type="guint64"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_set_attribute_int64"
              c:identifier="g_file_set_attribute_int64">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="attribute">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="value">
          <type name="int64" c:type="gint64"/>
        </parameter>
        <parameter name="flags">
          <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_mount_enclosing_volume"
              c:identifier="g_file_mount_enclosing_volume">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="location">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountMountFlags" c:type="GMountMountFlags"/>
        </parameter>
        <parameter name="mount_operation">
          <type name="MountOperation" c:type="GMountOperation*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_mount_enclosing_volume_finish"
              c:identifier="g_file_mount_enclosing_volume_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="location">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_mount_mountable"
              c:identifier="g_file_mount_mountable">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountMountFlags" c:type="GMountMountFlags"/>
        </parameter>
        <parameter name="mount_operation">
          <type name="MountOperation" c:type="GMountOperation*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_mount_mountable_finish"
              c:identifier="g_file_mount_mountable_finish">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_unmount_mountable"
              c:identifier="g_file_unmount_mountable">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_unmount_mountable_finish"
              c:identifier="g_file_unmount_mountable_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_eject_mountable"
              c:identifier="g_file_eject_mountable">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_eject_mountable_finish"
              c:identifier="g_file_eject_mountable_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_copy_attributes"
              c:identifier="g_file_copy_attributes">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="source">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="destination">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_monitor_directory"
              c:identifier="g_file_monitor_directory">
      <return-value>
        <type name="FileMonitor" c:type="GFileMonitor*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_monitor_file" c:identifier="g_file_monitor_file">
      <return-value>
        <type name="FileMonitor" c:type="GFileMonitor*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="flags">
          <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_query_default_handler"
              c:identifier="g_file_query_default_handler">
      <return-value>
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_load_contents" c:identifier="g_file_load_contents">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="contents">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="length">
          <type name="size_t" c:type="gsize*"/>
        </parameter>
        <parameter name="etag_out">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_load_contents_async"
              c:identifier="g_file_load_contents_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_load_contents_finish"
              c:identifier="g_file_load_contents_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="contents">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="length">
          <type name="size_t" c:type="gsize*"/>
        </parameter>
        <parameter name="etag_out">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_load_partial_contents_async"
              c:identifier="g_file_load_partial_contents_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="read_more_callback">
          <type name="FileReadMoreCallback" c:type="GFileReadMoreCallback"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_load_partial_contents_finish"
              c:identifier="g_file_load_partial_contents_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="contents">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="length">
          <type name="size_t" c:type="gsize*"/>
        </parameter>
        <parameter name="etag_out">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_replace_contents"
              c:identifier="g_file_replace_contents">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="contents">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="length">
          <type name="size_t" c:type="gsize"/>
        </parameter>
        <parameter name="etag">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="make_backup">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="new_etag">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_replace_contents_async"
              c:identifier="g_file_replace_contents_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="contents">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="length">
          <type name="size_t" c:type="gsize"/>
        </parameter>
        <parameter name="etag">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="make_backup">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="flags">
          <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_replace_contents_finish"
              c:identifier="g_file_replace_contents_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="new_etag">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <interface name="Volume"
               c:type="GVolume"
               glib:type-name="GVolume"
               glib:get-type="g_volume_get_type">
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="removed" c:type="removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uuid" c:type="get_uuid">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_drive" c:type="get_drive">
        <return-value>
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_mount" c:type="get_mount">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_mount" c:type="can_mount">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_eject" c:type="can_eject">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_fn" c:type="mount_fn">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_finish" c:type="mount_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject" c:type="eject">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_finish" c:type="eject_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_identifier" c:type="get_identifier">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="kind">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
        <return-value>
          <type name="int8" c:type="char**"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="should_automount" c:type="should_automount">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <glib:signal name="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <interface name="Drive"
               c:type="GDrive"
               glib:type-name="GDrive"
               glib:get-type="g_drive_get_type">
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="disconnected" c:type="disconnected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_button" c:type="eject_button">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="has_volumes" c:type="has_volumes">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volumes" c:type="get_volumes">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_media_removable" c:type="is_media_removable">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="has_media" c:type="has_media">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_media_check_automatic"
                c:type="is_media_check_automatic">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_eject" c:type="can_eject">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_poll_for_media" c:type="can_poll_for_media">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject" c:type="eject">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_finish" c:type="eject_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="poll_for_media" c:type="poll_for_media">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="poll_for_media_finish" c:type="poll_for_media_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_identifier" c:type="get_identifier">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="kind">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
        <return-value>
          <type name="int8" c:type="char**"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <glib:signal name="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="disconnected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="eject-button">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="MountIface" c:type="GMountIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmounted" c:type="unmounted">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_root" c:type="get_root">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uuid" c:type="get_uuid">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volume" c:type="get_volume">
        <return-value>
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_drive" c:type="get_drive">
        <return-value>
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_unmount" c:type="can_unmount">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_eject" c:type="can_eject">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount" c:type="unmount">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="unmount_finish" c:type="unmount_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject" c:type="eject">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_finish" c:type="eject_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="remount" c:type="remount">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="remount_finish" c:type="remount_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <function name="mount_get_root" c:identifier="g_mount_get_root">
      <return-value>
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_get_name" c:identifier="g_mount_get_name">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_get_icon" c:identifier="g_mount_get_icon">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_get_uuid" c:identifier="g_mount_get_uuid">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_get_volume" c:identifier="g_mount_get_volume">
      <return-value>
        <type name="Volume" c:type="GVolume*"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_get_drive" c:identifier="g_mount_get_drive">
      <return-value>
        <type name="Drive" c:type="GDrive*"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_can_unmount" c:identifier="g_mount_can_unmount">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_can_eject" c:identifier="g_mount_can_eject">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_unmount" c:identifier="g_mount_unmount">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_unmount_finish"
              c:identifier="g_mount_unmount_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_eject" c:identifier="g_mount_eject">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_eject_finish" c:identifier="g_mount_eject_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_remount" c:identifier="g_mount_remount">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountMountFlags" c:type="GMountMountFlags"/>
        </parameter>
        <parameter name="mount_operation">
          <type name="MountOperation" c:type="GMountOperation*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="mount_remount_finish"
              c:identifier="g_mount_remount_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <record name="VolumeIface" c:type="GVolumeIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="removed" c:type="removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_uuid" c:type="get_uuid">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_drive" c:type="get_drive">
        <return-value>
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_mount" c:type="get_mount">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_mount" c:type="can_mount">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_eject" c:type="can_eject">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_fn" c:type="mount_fn">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_finish" c:type="mount_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject" c:type="eject">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_finish" c:type="eject_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_identifier" c:type="get_identifier">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
          <parameter name="kind">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
        <return-value>
          <type name="int8" c:type="char**"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="should_automount" c:type="should_automount">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <function name="volume_get_name" c:identifier="g_volume_get_name">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_get_icon" c:identifier="g_volume_get_icon">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_get_uuid" c:identifier="g_volume_get_uuid">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_get_drive" c:identifier="g_volume_get_drive">
      <return-value>
        <type name="Drive" c:type="GDrive*"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_get_mount" c:identifier="g_volume_get_mount">
      <return-value>
        <type name="Mount" c:type="GMount*"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_can_mount" c:identifier="g_volume_can_mount">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_can_eject" c:identifier="g_volume_can_eject">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_should_automount"
              c:identifier="g_volume_should_automount">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_mount" c:identifier="g_volume_mount">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountMountFlags" c:type="GMountMountFlags"/>
        </parameter>
        <parameter name="mount_operation">
          <type name="MountOperation" c:type="GMountOperation*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_mount_finish" c:identifier="g_volume_mount_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_eject" c:identifier="g_volume_eject">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_eject_finish" c:identifier="g_volume_eject_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_get_identifier"
              c:identifier="g_volume_get_identifier">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
        <parameter name="kind">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="volume_enumerate_identifiers"
              c:identifier="g_volume_enumerate_identifiers">
      <return-value>
        <type name="int8" c:type="char**"/>
      </return-value>
      <parameters>
        <parameter name="volume">
          <type name="Volume" c:type="GVolume*"/>
        </parameter>
      </parameters>
    </function>
    <record name="DriveIface" c:type="GDriveIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="disconnected" c:type="disconnected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_button" c:type="eject_button">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_name" c:type="get_name">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_icon" c:type="get_icon">
        <return-value>
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="has_volumes" c:type="has_volumes">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volumes" c:type="get_volumes">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_media_removable" c:type="is_media_removable">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="has_media" c:type="has_media">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_media_check_automatic"
                c:type="is_media_check_automatic">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_eject" c:type="can_eject">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_poll_for_media" c:type="can_poll_for_media">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject" c:type="eject">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="flags">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="eject_finish" c:type="eject_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="poll_for_media" c:type="poll_for_media">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="poll_for_media_finish" c:type="poll_for_media_finish">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="result">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_identifier" c:type="get_identifier">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
          <parameter name="kind">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
        <return-value>
          <type name="int8" c:type="char**"/>
        </return-value>
        <parameters>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <function name="drive_get_name" c:identifier="g_drive_get_name">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_get_icon" c:identifier="g_drive_get_icon">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_has_volumes" c:identifier="g_drive_has_volumes">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_get_volumes" c:identifier="g_drive_get_volumes">
      <return-value>
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_is_media_removable"
              c:identifier="g_drive_is_media_removable">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_has_media" c:identifier="g_drive_has_media">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_is_media_check_automatic"
              c:identifier="g_drive_is_media_check_automatic">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_can_poll_for_media"
              c:identifier="g_drive_can_poll_for_media">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_can_eject" c:identifier="g_drive_can_eject">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_eject" c:identifier="g_drive_eject">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
        <parameter name="flags">
          <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_eject_finish" c:identifier="g_drive_eject_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_poll_for_media"
              c:identifier="g_drive_poll_for_media">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_poll_for_media_finish"
              c:identifier="g_drive_poll_for_media_finish">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
        <parameter name="result">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_get_identifier"
              c:identifier="g_drive_get_identifier">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
        <parameter name="kind">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="drive_enumerate_identifiers"
              c:identifier="g_drive_enumerate_identifiers">
      <return-value>
        <type name="int8" c:type="char**"/>
      </return-value>
      <parameters>
        <parameter name="drive">
          <type name="Drive" c:type="GDrive*"/>
        </parameter>
      </parameters>
    </function>
    <interface name="LoadableIcon"
               c:type="GLoadableIcon"
               glib:type-name="GLoadableIcon"
               glib:get-type="g_loadable_icon_get_type">
      <callback name="load" c:type="load">
        <return-value>
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="LoadableIcon" c:type="GLoadableIcon*"/>
          </parameter>
          <parameter name="size">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type">
            <type name="int8" c:type="char**"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="load_async" c:type="load_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="LoadableIcon" c:type="GLoadableIcon*"/>
          </parameter>
          <parameter name="size">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="load_finish" c:type="load_finish">
        <return-value>
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="LoadableIcon" c:type="GLoadableIcon*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="type">
            <type name="int8" c:type="char**"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </interface>
    <record name="LoadableIconIface" c:type="GLoadableIconIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="load" c:type="load">
        <return-value>
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="LoadableIcon" c:type="GLoadableIcon*"/>
          </parameter>
          <parameter name="size">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type">
            <type name="int8" c:type="char**"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="load_async" c:type="load_async">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="LoadableIcon" c:type="GLoadableIcon*"/>
          </parameter>
          <parameter name="size">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="load_finish" c:type="load_finish">
        <return-value>
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="LoadableIcon" c:type="GLoadableIcon*"/>
          </parameter>
          <parameter name="res">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="type">
            <type name="int8" c:type="char**"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <function name="loadable_icon_load" c:identifier="g_loadable_icon_load">
      <return-value>
        <type name="InputStream" c:type="GInputStream*"/>
      </return-value>
      <parameters>
        <parameter name="icon">
          <type name="LoadableIcon" c:type="GLoadableIcon*"/>
        </parameter>
        <parameter name="size">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="type">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="loadable_icon_load_async"
              c:identifier="g_loadable_icon_load_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="icon">
          <type name="LoadableIcon" c:type="GLoadableIcon*"/>
        </parameter>
        <parameter name="size">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="loadable_icon_load_finish"
              c:identifier="g_loadable_icon_load_finish">
      <return-value>
        <type name="InputStream" c:type="GInputStream*"/>
      </return-value>
      <parameters>
        <parameter name="icon">
          <type name="LoadableIcon" c:type="GLoadableIcon*"/>
        </parameter>
        <parameter name="res">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="type">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <class name="FileIcon"
           c:type="GFileIcon"
           parent="GObject.Object"
           glib:type-name="GFileIcon"
           glib:get-type="g_file_icon_get_type">
      <method name="get_file" c:identifier="g_file_icon_get_file">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="FileIcon" c:type="GFileIcon*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="FileIconClass" c:type="GFileIconClass"/>
    <function name="file_icon_new" c:identifier="g_file_icon_new">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="file">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <enumeration name="FileMonitorEvent"
                 c:type="GFileMonitorEvent"
                 glib:type-name="GFileMonitorEvent"
                 glib:get-type="g_file_monitor_event_get_type">
      <member name="changed"
              value="0"
              c:identifier="G_FILE_MONITOR_EVENT_CHANGED"
              glib:nick="changed"/>
      <member name="changes-done-hint"
              value="1"
              c:identifier="G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT"
              glib:nick="changes-done-hint"/>
      <member name="deleted"
              value="2"
              c:identifier="G_FILE_MONITOR_EVENT_DELETED"
              glib:nick="deleted"/>
      <member name="created"
              value="3"
              c:identifier="G_FILE_MONITOR_EVENT_CREATED"
              glib:nick="created"/>
      <member name="attribute-changed"
              value="4"
              c:identifier="G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED"
              glib:nick="attribute-changed"/>
      <member name="pre-unmount"
              value="5"
              c:identifier="G_FILE_MONITOR_EVENT_PRE_UNMOUNT"
              glib:nick="pre-unmount"/>
      <member name="unmounted"
              value="6"
              c:identifier="G_FILE_MONITOR_EVENT_UNMOUNTED"
              glib:nick="unmounted"/>
    </enumeration>
    <record name="FileMonitorClass" c:type="GFileMonitorClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="changed" c:type="changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
          <parameter name="file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="other_file">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="event_type">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="cancel" c:type="cancel">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="monitor">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="FileMonitorPrivate" c:type="GFileMonitorPrivate"/>
    <class name="FilenameCompleter"
           c:type="GFilenameCompleter"
           parent="GObject.Object"
           glib:type-name="GFilenameCompleter"
           glib:get-type="g_filename_completer_get_type">
      <constructor name="new" c:identifier="g_filename_completer_new">
        <return-value>
          <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
        </return-value>
      </constructor>
      <method name="get_completion_suffix"
              c:identifier="g_filename_completer_get_completion_suffix">
        <return-value>
          <type name="string" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="completer">
            <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
          </parameter>
          <parameter name="initial_text">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_completions"
              c:identifier="g_filename_completer_get_completions">
        <return-value>
          <type name="int8" c:type="char**"/>
        </return-value>
        <parameters>
          <parameter name="completer">
            <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
          </parameter>
          <parameter name="initial_text">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dirs_only"
              c:identifier="g_filename_completer_set_dirs_only">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="completer">
            <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
          </parameter>
          <parameter name="dirs_only">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <callback name="ot_completion_data" c:type="got_completion_data">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filename_completer">
            <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <glib:signal name="got-completion-data">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="FilenameCompleterClass" c:type="GFilenameCompleterClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="ot_completion_data" c:type="got_completion_data">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filename_completer">
            <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <class name="Vfs"
           c:type="GVfs"
           parent="GObject.Object"
           glib:type-name="GVfs"
           glib:get-type="g_vfs_get_type">
      <constructor name="get_default" c:identifier="g_vfs_get_default">
        <return-value>
          <type name="Vfs" c:type="GVfs*"/>
        </return-value>
      </constructor>
      <constructor name="get_local" c:identifier="g_vfs_get_local">
        <return-value>
          <type name="Vfs" c:type="GVfs*"/>
        </return-value>
      </constructor>
      <method name="is_active" c:identifier="g_vfs_is_active">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_for_path" c:identifier="g_vfs_get_file_for_path">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="path">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_for_uri" c:identifier="g_vfs_get_file_for_uri">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="uri">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_supported_uri_schemes"
              c:identifier="g_vfs_get_supported_uri_schemes">
        <return-value>
          <type name="GLib.char" c:type="gchar**"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
        </parameters>
      </method>
      <method name="parse_name" c:identifier="g_vfs_parse_name">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="parse_name">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <callback name="is_active" c:type="is_active">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_file_for_path" c:type="get_file_for_path">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="path">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_file_for_uri" c:type="get_file_for_uri">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="uri">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_supported_uri_schemes"
                c:type="get_supported_uri_schemes">
        <return-value>
          <type name="GLib.char" c:type="gchar**"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="parse_name" c:type="parse_name">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="parse_name">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved9" c:type="_g_reserved9">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved10" c:type="_g_reserved10">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved11" c:type="_g_reserved11">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved12" c:type="_g_reserved12">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="VfsClass" c:type="GVfsClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="is_active" c:type="is_active">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_file_for_path" c:type="get_file_for_path">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="path">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_file_for_uri" c:type="get_file_for_uri">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="uri">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_supported_uri_schemes"
                c:type="get_supported_uri_schemes">
        <return-value>
          <type name="GLib.char" c:type="gchar**"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="parse_name" c:type="parse_name">
        <return-value>
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="vfs">
            <type name="Vfs" c:type="GVfs*"/>
          </parameter>
          <parameter name="parse_name">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved9" c:type="_g_reserved9">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved10" c:type="_g_reserved10">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved11" c:type="_g_reserved11">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved12" c:type="_g_reserved12">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <class name="VolumeMonitor"
           c:type="GVolumeMonitor"
           parent="GObject.Object"
           glib:type-name="GVolumeMonitor"
           glib:get-type="g_volume_monitor_get_type">
      <constructor name="get" c:identifier="g_volume_monitor_get">
        <return-value>
          <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
        </return-value>
      </constructor>
      <method name="get_connected_drives"
              c:identifier="g_volume_monitor_get_connected_drives">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_volumes" c:identifier="g_volume_monitor_get_volumes">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mounts" c:identifier="g_volume_monitor_get_mounts">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_volume_for_uuid"
              c:identifier="g_volume_monitor_get_volume_for_uuid">
        <return-value>
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="uuid">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mount_for_uuid"
              c:identifier="g_volume_monitor_get_mount_for_uuid">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="uuid">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <callback name="volume_added" c:type="volume_added">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="volume_removed" c:type="volume_removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="volume_changed" c:type="volume_changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_added" c:type="mount_added">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_removed" c:type="mount_removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_pre_unmount" c:type="mount_pre_unmount">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_changed" c:type="mount_changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="drive_connected" c:type="drive_connected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="drive_disconnected" c:type="drive_disconnected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="drive_changed" c:type="drive_changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_supported" c:type="is_supported">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </callback>
      <callback name="et_connected_drives" c:type="get_connected_drives">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volumes" c:type="get_volumes">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_mounts" c:type="get_mounts">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volume_for_uuid" c:type="get_volume_for_uuid">
        <return-value>
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="uuid">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_mount_for_uuid" c:type="get_mount_for_uuid">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="uuid">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="adopt_orphan_mount" c:type="adopt_orphan_mount">
        <return-value>
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <glib:signal name="volume-added">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-added">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-pre-unmount">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-connected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-disconnected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="VolumeMonitorClass" c:type="GVolumeMonitorClass">
      <field name="parent_class">
        <type name="GObject.Class" c:type="GObjectClass"/>
      </field>
      <callback name="volume_added" c:type="volume_added">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="volume_removed" c:type="volume_removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="volume_changed" c:type="volume_changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="volume">
            <type name="Volume" c:type="GVolume*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_added" c:type="mount_added">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_removed" c:type="mount_removed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_pre_unmount" c:type="mount_pre_unmount">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="mount_changed" c:type="mount_changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="drive_connected" c:type="drive_connected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="drive_disconnected" c:type="drive_disconnected">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="drive_changed" c:type="drive_changed">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="drive">
            <type name="Drive" c:type="GDrive*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="is_supported" c:type="is_supported">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </callback>
      <callback name="et_connected_drives" c:type="get_connected_drives">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volumes" c:type="get_volumes">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_mounts" c:type="get_mounts">
        <return-value>
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_volume_for_uuid" c:type="get_volume_for_uuid">
        <return-value>
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="uuid">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="et_mount_for_uuid" c:type="get_mount_for_uuid">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
          <parameter name="uuid">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="adopt_orphan_mount" c:type="adopt_orphan_mount">
        <return-value>
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="mount">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
          <parameter name="volume_monitor">
            <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved6" c:type="_g_reserved6">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved7" c:type="_g_reserved7">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved8" c:type="_g_reserved8">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <function name="volume_monitor_adopt_orphan_mount"
              c:identifier="g_volume_monitor_adopt_orphan_mount">
      <return-value>
        <type name="Volume" c:type="GVolume*"/>
      </return-value>
      <parameters>
        <parameter name="mount">
          <type name="Mount" c:type="GMount*"/>
        </parameter>
      </parameters>
    </function>
    <class name="ThemedIcon"
           c:type="GThemedIcon"
           parent="GObject.Object"
           glib:type-name="GThemedIcon"
           glib:get-type="g_themed_icon_get_type">
      <method name="append_name" c:identifier="g_themed_icon_append_name">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="ThemedIcon" c:type="GThemedIcon*"/>
          </parameter>
          <parameter name="iconname">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_names" c:identifier="g_themed_icon_get_names">
        <return-value>
          <type name="int8" c:type="char**"/>
        </return-value>
        <parameters>
          <parameter name="icon">
            <type name="ThemedIcon" c:type="GThemedIcon*"/>
          </parameter>
        </parameters>
      </method>
      <property name="name">
        <type name="string" c:type="gchararray"/>
      </property>
      <property name="names">
        <type name="GObject.Strv" c:type="GStrv"/>
      </property>
      <property name="use-default-fallbacks">
        <type name="boolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ThemedIconClass" c:type="GThemedIconClass"/>
    <function name="themed_icon_new" c:identifier="g_themed_icon_new">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="iconname">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="themed_icon_new_with_default_fallbacks"
              c:identifier="g_themed_icon_new_with_default_fallbacks">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="iconname">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="themed_icon_new_from_names"
              c:identifier="g_themed_icon_new_from_names">
      <return-value>
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="iconnames">
          <type name="int8" c:type="char**"/>
        </parameter>
        <parameter name="len">
          <type name="int" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <interface name="Seekable"
               c:type="GSeekable"
               glib:type-name="GSeekable"
               glib:get-type="g_seekable_get_type">
      <callback name="tell" c:type="tell">
        <return-value>
          <type name="goffset" c:type="goffset"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_seek" c:type="can_seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="seek" c:type="seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="type">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_truncate" c:type="can_truncate">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="truncate_fn" c:type="truncate_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </interface>
    <record name="SeekableIface" c:type="GSeekableIface">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <callback name="tell" c:type="tell">
        <return-value>
          <type name="goffset" c:type="goffset"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_seek" c:type="can_seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="seek" c:type="seek">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="type">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="can_truncate" c:type="can_truncate">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
        </parameters>
      </callback>
      <callback name="truncate_fn" c:type="truncate_fn">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="seekable">
            <type name="Seekable" c:type="GSeekable*"/>
          </parameter>
          <parameter name="offset">
            <type name="goffset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </callback>
    </record>
    <function name="seekable_tell" c:identifier="g_seekable_tell">
      <return-value>
        <type name="goffset" c:type="goffset"/>
      </return-value>
      <parameters>
        <parameter name="seekable">
          <type name="Seekable" c:type="GSeekable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="seekable_can_seek" c:identifier="g_seekable_can_seek">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable">
          <type name="Seekable" c:type="GSeekable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="seekable_seek" c:identifier="g_seekable_seek">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable">
          <type name="Seekable" c:type="GSeekable*"/>
        </parameter>
        <parameter name="offset">
          <type name="goffset" c:type="goffset"/>
        </parameter>
        <parameter name="type">
          <type name="GLib.SeekType" c:type="GSeekType"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <function name="seekable_can_truncate"
              c:identifier="g_seekable_can_truncate">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable">
          <type name="Seekable" c:type="GSeekable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="seekable_truncate" c:identifier="g_seekable_truncate">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="seekable">
          <type name="Seekable" c:type="GSeekable*"/>
        </parameter>
        <parameter name="offset">
          <type name="goffset" c:type="goffset"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
      </parameters>
    </function>
    <class name="Module"
           c:type="GIOModule"
           parent="GObject.TypeModule"
           glib:type-name="GIOModule"
           glib:get-type="g_io_module_get_type">
      <constructor name="new" c:identifier="g_io_module_new">
        <return-value>
          <type name="Module" c:type="GIOModule*"/>
        </return-value>
        <parameters>
          <parameter name="filename">
            <type name="string" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="load" c:identifier="g_io_module_load">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="module">
            <type name="Module" c:type="GIOModule*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unload" c:identifier="g_io_module_unload">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="module">
            <type name="Module" c:type="GIOModule*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ModuleClass" c:type="GIOModuleClass"/>
    <record name="ExtensionPoint" c:type="GIOExtensionPoint"/>
    <record name="Extension" c:type="GIOExtension"/>
    <function name="io_modules_load_all_in_directory"
              c:identifier="g_io_modules_load_all_in_directory">
      <return-value>
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="dirname">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_register"
              c:identifier="g_io_extension_point_register">
      <return-value>
        <type name="ExtensionPoint" c:type="GIOExtensionPoint*"/>
      </return-value>
      <parameters>
        <parameter name="name">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_lookup"
              c:identifier="g_io_extension_point_lookup">
      <return-value>
        <type name="ExtensionPoint" c:type="GIOExtensionPoint*"/>
      </return-value>
      <parameters>
        <parameter name="name">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_set_required_type"
              c:identifier="g_io_extension_point_set_required_type">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="extension_point">
          <type name="ExtensionPoint" c:type="GIOExtensionPoint*"/>
        </parameter>
        <parameter name="type">
          <type name="GObject.Type" c:type="GType"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_get_required_type"
              c:identifier="g_io_extension_point_get_required_type">
      <return-value>
        <type name="GObject.Type" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="extension_point">
          <type name="ExtensionPoint" c:type="GIOExtensionPoint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_get_extensions"
              c:identifier="g_io_extension_point_get_extensions">
      <return-value>
        <type name="GLib.List" c:type="GList*"/>
      </return-value>
      <parameters>
        <parameter name="extension_point">
          <type name="ExtensionPoint" c:type="GIOExtensionPoint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_get_extension_by_name"
              c:identifier="g_io_extension_point_get_extension_by_name">
      <return-value>
        <type name="Extension" c:type="GIOExtension*"/>
      </return-value>
      <parameters>
        <parameter name="extension_point">
          <type name="ExtensionPoint" c:type="GIOExtensionPoint*"/>
        </parameter>
        <parameter name="name">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_implement"
              c:identifier="g_io_extension_point_implement">
      <return-value>
        <type name="Extension" c:type="GIOExtension*"/>
      </return-value>
      <parameters>
        <parameter name="extension_point_name">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="type">
          <type name="GObject.Type" c:type="GType"/>
        </parameter>
        <parameter name="extension_name">
          <type name="string" c:type="char*"/>
        </parameter>
        <parameter name="priority">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_get_type"
              c:identifier="g_io_extension_get_type">
      <return-value>
        <type name="GObject.Type" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="extension">
          <type name="Extension" c:type="GIOExtension*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_get_name"
              c:identifier="g_io_extension_get_name">
      <return-value>
        <type name="string" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="extension">
          <type name="Extension" c:type="GIOExtension*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_get_priority"
              c:identifier="g_io_extension_get_priority">
      <return-value>
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="extension">
          <type name="Extension" c:type="GIOExtension*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_ref_class"
              c:identifier="g_io_extension_ref_class">
      <return-value>
        <type name="GObject.TypeClass" c:type="GTypeClass*"/>
      </return-value>
      <parameters>
        <parameter name="extension">
          <type name="Extension" c:type="GIOExtension*"/>
        </parameter>
      </parameters>
    </function>
    <record name="SchedulerJob" c:type="GIOSchedulerJob"/>
    <callback name="SchedulerJobFunc" c:type="GIOSchedulerJobFunc">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="job">
          <type name="SchedulerJob" c:type="GIOSchedulerJob*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <function name="io_scheduler_push_job"
              c:identifier="g_io_scheduler_push_job">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="job_func">
          <type name="SchedulerJobFunc" c:type="GIOSchedulerJobFunc"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="notify">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="io_priority">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_scheduler_cancel_all_jobs"
              c:identifier="g_io_scheduler_cancel_all_jobs">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="io_scheduler_job_send_to_mainloop"
              c:identifier="g_io_scheduler_job_send_to_mainloop">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="job">
          <type name="SchedulerJob" c:type="GIOSchedulerJob*"/>
        </parameter>
        <parameter name="func">
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="notify">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_scheduler_job_send_to_mainloop_async"
              c:identifier="g_io_scheduler_job_send_to_mainloop_async">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="job">
          <type name="SchedulerJob" c:type="GIOSchedulerJob*"/>
        </parameter>
        <parameter name="func">
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="notify">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <class name="MemoryInputStream"
           c:type="GMemoryInputStream"
           parent="InputStream"
           glib:type-name="GMemoryInputStream"
           glib:get-type="g_memory_input_stream_get_type">
      <method name="add_data" c:identifier="g_memory_input_stream_add_data">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream">
            <type name="MemoryInputStream" c:type="GMemoryInputStream*"/>
          </parameter>
          <parameter name="data">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="len">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
          <parameter name="destroy">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="MemoryInputStreamClass" c:type="GMemoryInputStreamClass">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="MemoryInputStreamPrivate"
            c:type="GMemoryInputStreamPrivate"/>
    <function name="memory_input_stream_new"
              c:identifier="g_memory_input_stream_new">
      <return-value>
        <type name="InputStream" c:type="GInputStream*"/>
      </return-value>
    </function>
    <function name="memory_input_stream_new_from_data"
              c:identifier="g_memory_input_stream_new_from_data">
      <return-value>
        <type name="InputStream" c:type="GInputStream*"/>
      </return-value>
      <parameters>
        <parameter name="data">
          <type name="any" c:type="void*"/>
        </parameter>
        <parameter name="len">
          <type name="ssize_t" c:type="gssize"/>
        </parameter>
        <parameter name="destroy">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <class name="MemoryOutputStream"
           c:type="GMemoryOutputStream"
           parent="OutputStream"
           glib:type-name="GMemoryOutputStream"
           glib:get-type="g_memory_output_stream_get_type">
      <method name="get_data" c:identifier="g_memory_output_stream_get_data">
        <return-value>
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="ostream">
            <type name="MemoryOutputStream" c:type="GMemoryOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="g_memory_output_stream_get_size">
        <return-value>
          <type name="size_t" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="ostream">
            <type name="MemoryOutputStream" c:type="GMemoryOutputStream*"/>
          </parameter>
        </parameters>
      </method>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </class>
    <record name="MemoryOutputStreamClass" c:type="GMemoryOutputStreamClass">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <callback name="g_reserved1" c:type="_g_reserved1">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved2" c:type="_g_reserved2">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved3" c:type="_g_reserved3">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved4" c:type="_g_reserved4">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
      <callback name="g_reserved5" c:type="_g_reserved5">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
      </callback>
    </record>
    <record name="MemoryOutputStreamPrivate"
            c:type="GMemoryOutputStreamPrivate"/>
    <callback name="ReallocFunc" c:type="GReallocFunc">
      <return-value>
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="size">
          <type name="size_t" c:type="gsize"/>
        </parameter>
      </parameters>
    </callback>
    <function name="memory_output_stream_new"
              c:identifier="g_memory_output_stream_new">
      <return-value>
        <type name="OutputStream" c:type="GOutputStream*"/>
      </return-value>
      <parameters>
        <parameter name="data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="len">
          <type name="size_t" c:type="gsize"/>
        </parameter>
        <parameter name="realloc_fn">
          <type name="ReallocFunc" c:type="GReallocFunc"/>
        </parameter>
        <parameter name="destroy">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <class name="SimpleAsyncResult"
           c:type="GSimpleAsyncResult"
           parent="GObject.Object"
           glib:type-name="GSimpleAsyncResult"
           glib:get-type="g_simple_async_result_get_type">
      <constructor name="new" c:identifier="g_simple_async_result_new">
        <return-value>
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </return-value>
        <parameters>
          <parameter name="source_object">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="source_tag">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_error"
                   c:identifier="g_simple_async_result_new_error">
        <return-value>
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </return-value>
        <parameters>
          <parameter name="source_object">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="domain">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_error"
                   c:identifier="g_simple_async_result_new_from_error">
        <return-value>
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </return-value>
        <parameters>
          <parameter name="source_object">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="callback">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_op_res_gpointer"
              c:identifier="g_simple_async_result_set_op_res_gpointer">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="op_res">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_op_res">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gpointer"
              c:identifier="g_simple_async_result_get_op_res_gpointer">
        <return-value>
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_op_res_gssize"
              c:identifier="g_simple_async_result_set_op_res_gssize">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="op_res">
            <type name="ssize_t" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gssize"
              c:identifier="g_simple_async_result_get_op_res_gssize">
        <return-value>
          <type name="ssize_t" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_op_res_gboolean"
              c:identifier="g_simple_async_result_set_op_res_gboolean">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="op_res">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gboolean"
              c:identifier="g_simple_async_result_get_op_res_gboolean">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_source_tag"
              c:identifier="g_simple_async_result_get_source_tag">
        <return-value>
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_handle_cancellation"
              c:identifier="g_simple_async_result_set_handle_cancellation">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="handle_cancellation">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete" c:identifier="g_simple_async_result_complete">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_in_idle"
              c:identifier="g_simple_async_result_complete_in_idle">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_in_thread"
              c:identifier="g_simple_async_result_run_in_thread">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="func">
            <type name="SimpleAsyncThreadFunc"
                  c:type="GSimpleAsyncThreadFunc"/>
          </parameter>
          <parameter name="io_priority">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_from_error"
              c:identifier="g_simple_async_result_set_from_error">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="error">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
        </parameters>
      </method>
      <method name="propagate_error"
              c:identifier="g_simple_async_result_propagate_error">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="dest">
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_error" c:identifier="g_simple_async_result_set_error">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="simple">
            <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
          </parameter>
          <parameter name="domain">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format">
            <type name="string" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="SimpleAsyncResultClass" c:type="GSimpleAsyncResultClass"/>
    <callback name="SimpleAsyncThreadFunc" c:type="GSimpleAsyncThreadFunc">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="res">
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </parameter>
        <parameter name="object">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="cancellable">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </callback>
    <function name="simple_async_report_error_in_idle"
              c:identifier="g_simple_async_report_error_in_idle">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="domain">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="format">
          <type name="string" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="simple_async_report_gerror_in_idle"
              c:identifier="g_simple_async_report_gerror_in_idle">
      <return-value>
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="callback">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="error">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
      </parameters>
    </function>
    <class name="NativeVolumeMonitor"
           c:type="GNativeVolumeMonitor"
           parent="VolumeMonitor"
           glib:type-name="GNativeVolumeMonitor"
           glib:get-type="g_native_volume_monitor_get_type">
      <callback name="et_mount_for_mount_path"
                c:type="get_mount_for_mount_path">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="mount_path">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </callback>
    </class>
    <record name="NativeVolumeMonitorClass" c:type="GNativeVolumeMonitorClass">
      <field name="parent_class">
        <type name="VolumeMonitorClass" c:type="GVolumeMonitorClass"/>
      </field>
      <callback name="et_mount_for_mount_path"
                c:type="get_mount_for_mount_path">
        <return-value>
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="mount_path">
            <type name="string" c:type="char*"/>
          </parameter>
          <parameter name="cancellable">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </callback>
    </record>
  </namespace>
</repository>
