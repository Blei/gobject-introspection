<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <namespace name="Foo">
    <interface name="Interface"
               c:type="FooInterface"
               glib:type-name="FooInterface"
               glib:get-type="foo_interface_get_type">
    </interface>
    <function name="init" c:identifier="foo_init">
      <return-value>
        <type name="int32" c:type="gint"/>
      </return-value>
    </function>
    <class name="Object"
           c:type="FooObject"
           parent="GLib.Object"
           glib:type-name="FooObject"
           glib:get-type="foo_object_get_type">
      <constructor name="new" c:identifier="foo_object_new">
        <return-value>
          <type name="Object" c:type="FooObject*"/>
        </return-value>
      </constructor>
      <method name="method" c:identifier="foo_object_method">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="external_type" c:identifier="foo_object_external_type">
        <return-value>
          <type name="utility.Object" c:type="UtilityObject*"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="out" c:identifier="foo_object_out">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="outarg" direction="out">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_object" c:identifier="foo_object_create_object">
        <return-value transfer-ownership="1">
          <type name="GLib.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="allow_none" c:identifier="foo_object_allow_none">
        <return-value>
          <type name="GLib.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="allow_none" allow-none="1">
            <type name="string" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="inout" c:identifier="foo_object_inout">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="inoutarg" direction="inout">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="inout2" c:identifier="foo_object_inout2">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="inoutarg">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="inout3" c:identifier="foo_object_inout3">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="inoutarg" direction="inout">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="in" c:identifier="foo_object_in">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="inarg">
            <type name="int" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="calleeowns" c:identifier="foo_object_calleeowns">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="toown" transfer-ownership="1">
            <type name="GLib.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="calleesowns" c:identifier="foo_object_calleesowns">
        <return-value>
          <type name="int32" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="toown1" transfer-ownership="1">
            <type name="GLib.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="toown2" transfer-ownership="1">
            <type name="GLib.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_strings" c:identifier="foo_object_get_strings">
        <return-value>
          <sequence transfer-ownership="1">
            <element-type c:identifier="char*"/>
          </sequence>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_objects" c:identifier="foo_object_get_objects">
        <return-value>
          <sequence transfer-ownership="1">
            <element-type c:identifier="FooObject*"/>
          </sequence>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="various" c:identifier="foo_object_various">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="data">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="some_type">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="with_tdef" c:identifier="foo_object_with_tdef">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="blah">
            <type name="FooList" c:type="FooList*"/>
          </parameter>
        </parameters>
      </method>
      <property name="string">
        <type name="string" c:type="gchararray"/>
      </property>
      <callback name="virtual_method">
        <return-value>
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="Object" c:type="FooObject*"/>
          </parameter>
          <parameter name="first_param">
            <type name="int32" c:type="int"/>
          </parameter>
        </parameters>
      </callback>
      <glib:signal name="signal">
        <return-value>
          <type name="string" c:type="gchararray"/>
        </return-value>
        <parameters>
          <parameter name="object">
            <type name="GLib.Object" c:type="GObject"/>
          </parameter>
          <parameter name="p0">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <alias name="FooList" target="GSList"/>
    <class name="Subobject"
           c:type="FooSubobject"
           parent="Object"
           glib:type-name="FooSubobject"
           glib:get-type="foo_subobject_get_type">
      <constructor name="new" c:identifier="foo_subobject_new">
        <return-value>
          <type name="Subobject" c:type="FooSubobject*"/>
        </return-value>
      </constructor>
    </class>
    <enumeration name="EnumType"
                 c:type="FooEnumType"
                 glib:type-name="FooEnumType"
                 glib:get-type="foo_enum_type_get_type">
      <member name="alpha"
              value="0"
              c:identifier="FOO_ENUM_ALPHA"
              glib:nick="alpha"/>
      <member name="beta"
              value="1"
              c:identifier="FOO_ENUM_BETA"
              glib:nick="beta"/>
      <member name="delta"
              value="2"
              c:identifier="FOO_ENUM_DELTA"
              glib:nick="delta"/>
    </enumeration>
    <function name="enum_type_method" c:identifier="foo_enum_type_method">
      <return-value>
        <type name="int32" c:type="int"/>
      </return-value>
      <parameters>
        <parameter name="foo_enum">
          <type name="EnumType" c:type="FooEnumType"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_type_returnv" c:identifier="foo_enum_type_returnv">
      <return-value>
        <type name="EnumType" c:type="FooEnumType"/>
      </return-value>
      <parameters>
        <parameter name="x">
          <type name="int32" c:type="int"/>
        </parameter>
      </parameters>
    </function>
    <bitfield name="FlagsType"
              c:type="FooFlagsType"
              glib:type-name="FooFlagsType"
              glib:get-type="foo_flags_type_get_type">
      <member name="first"
              value="1"
              c:identifier="FOO_FLAGS_FIRST"
              glib:nick="first"/>
      <member name="second"
              value="2"
              c:identifier="FOO_FLAGS_SECOND"
              glib:nick="second"/>
      <member name="third"
              value="4"
              c:identifier="FOO_FLAGS_THIRD"
              glib:nick="third"/>
    </bitfield>
    <enumeration name="EnumNoType" c:type="FooEnumNoType">
      <member name="un" value="1" c:identifier="FOO_ENUM_UN"/>
      <member name="deux" value="2" c:identifier="FOO_ENUM_DEUX"/>
      <member name="trois" value="3" c:identifier="FOO_ENUM_TROIS"/>
    </enumeration>
    <glib:boxed c:type="Boxed"
                glib:name="Boxed"
                glib:type-name="FooBoxed"
                glib:get-type="foo_boxed_get_type">
      <constructor name="new" c:identifier="foo_boxed_new">
        <return-value>
          <type name="Boxed" c:type="FooBoxed*"/>
        </return-value>
      </constructor>
      <method name="method" c:identifier="foo_boxed_method">
        <return-value>
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="boxed">
            <type name="Boxed" c:type="FooBoxed*"/>
          </parameter>
        </parameters>
      </method>
    </glib:boxed>
    <callback name="FooCallback">
      <return-value>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="foo">
          <type name="Object" c:type="FooObject*"/>
        </parameter>
        <parameter name="b">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="data">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="FooStruct" c:type="FooStruct">
      <field name="priv">
        <type name="FooStructPrivate" c:type="FooStructPrivate*"/>
      </field>
      <field name="member">
        <type name="int32" c:type="int"/>
      </field>
    </record>
    <record name="FooStructPrivate" c:type="FooStructPrivate"/>
    <record name="FooRectangle" c:type="FooRectangle">
      <field name="x">
        <type name="int32" c:type="gint"/>
      </field>
      <field name="y">
        <type name="int32" c:type="gint"/>
      </field>
      <field name="width">
        <type name="int32" c:type="gint"/>
      </field>
      <field name="height">
        <type name="int32" c:type="gint"/>
      </field>
    </record>
  </namespace>
</repository>
