#!/usr/bin/env python
import optparse
import sys

sys.path.insert(0, '.')

from giscanner.gidlwriter import GIDLWriter
from giscanner.sourcescanner import SourceScanner
from giscanner.treebuilder import TreeBuilder

def main(args):
    parser = optparse.OptionParser('%prog [options] sources')
    parser.add_option("-v", "--verbose",
                      action="store_true", dest="verbose",
                      help="be verbose")
    parser.add_option("-n", "--namespace",
                      action="store", dest="namespace",
                      help="namespace of this unit")

    group = optparse.OptionGroup(parser, "Preprocessor options")
    group.add_option("-I", help="Pre-processor include file",
                     action="append", dest="cpp_includes")
    group.add_option("-D", help="Pre-processor define",
                     action="append", dest="cpp_defines")
    group.add_option("-U", help="Pre-processor undefine",
                     action="append", dest="cpp_undefines")
    group.add_option("-p", dest="", help="Ignored")
    parser.add_option_group(group)

    (options, args) = parser.parse_args()

    if not args:
        print 'ERROR: Needs at least one filename.'
        return 0

    ss = SourceScanner()
    ss.set_cpp_options(options.cpp_includes,
                       options.cpp_defines,
                       options.cpp_undefines)
    filenames = []
    for arg in args:
        if (arg.endswith('.c') or
            arg.endswith('.h')):
            filenames.append(arg)

    for filename in filenames:
        ss.parse_file(filename)
    ss.parse_macros()

    builder = TreeBuilder(ss)
    writer = GIDLWriter(options.namespace, builder.get_nodes())
    print writer.get_xml()


sys.exit(main(sys.argv))
