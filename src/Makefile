# Makefile.in generated by automake 1.7.9 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/gobject-introspection
pkglibdir = $(libdir)/gobject-introspection
pkgincludedir = $(includedir)/gobject-introspection
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /home/boston/mclasen/bin/install-check
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/boston/mclasen/gobject-introspection/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/boston/mclasen/gobject-introspection/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/boston/mclasen/gobject-introspection/missing --run autoconf
AUTOHEADER = ${SHELL} /home/boston/mclasen/gobject-introspection/missing --run autoheader
AUTOMAKE = ${SHELL} /home/boston/mclasen/gobject-introspection/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
GIREPO_CFLAGS = -I/home/boston/mclasen/gnome212/install/include/glib-2.0 -I/home/boston/mclasen/gnome212/install/lib/glib-2.0/include -I/home/boston/mclasen/gnome212/install/include  
GIREPO_LIBS = -Wl,--export-dynamic -L/home/boston/mclasen/gnome212/install/lib -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0 -lffi  
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = 
MAINTAINER_MODE_FALSE = #
MAINTAINER_MODE_TRUE = 
MAKEINFO = ${SHELL} /home/boston/mclasen/gobject-introspection/missing --run makeinfo
OBJEXT = o
PACKAGE = gobject-introspection
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=glib
PACKAGE_NAME = gobject-introspection
PACKAGE_STRING = gobject-introspection 0.1
PACKAGE_TARNAME = gobject-introspection
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
PKG_CONFIG = /home/boston/mclasen/gnome212/install/bin/pkg-config
POW_LIB = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_pt_PKG_CONFIG = /home/boston/mclasen/gnome212/install/bin/pkg-config
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/boston/mclasen/gobject-introspection/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /home/boston/mclasen/gnome212/install
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

lib_LTLIBRARIES = libgirepository.la
bin_PROGRAMS = g-idl-compiler g-idl-generate

libgirepository_la_SOURCES = \
	girepository.c				\
	gmetadata.c				\
	ginfo.c					\
	ginvoke.c

libgirepository_la_CFLAGS = $(GIREPO_CFLAGS)

g_idl_compiler_SOURCES = \
	gidlparser.c				\
	gidlmodule.c				\
	gidlnode.c				\
	gmetadata.c				\
	compiler.c	

g_idl_compiler_CFLAGS = $(GIREPO_CFLAGS)
g_idl_compiler_LDADD = -ldl $(GIREPO_LIBS)

g_idl_generate_SOURCES = generate.c
g_idl_generate_CFLAGS = $(GIREPO_CFLAGS)
g_idl_generate_LDADD = -ldl $(GIREPO_LIBS) libgirepository.la

girepodir = $(includedir)/glib-2.0/gobject-introspection
girepo_HEADERS = girepository.h
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES)

libgirepository_la_LDFLAGS =
libgirepository_la_LIBADD =
am_libgirepository_la_OBJECTS = libgirepository_la-girepository.lo \
	libgirepository_la-gmetadata.lo libgirepository_la-ginfo.lo \
	libgirepository_la-ginvoke.lo
libgirepository_la_OBJECTS = $(am_libgirepository_la_OBJECTS)
bin_PROGRAMS = g-idl-compiler$(EXEEXT) g-idl-generate$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_g_idl_compiler_OBJECTS = g_idl_compiler-gidlparser.$(OBJEXT) \
	g_idl_compiler-gidlmodule.$(OBJEXT) \
	g_idl_compiler-gidlnode.$(OBJEXT) \
	g_idl_compiler-gmetadata.$(OBJEXT) \
	g_idl_compiler-compiler.$(OBJEXT)
g_idl_compiler_OBJECTS = $(am_g_idl_compiler_OBJECTS)
g_idl_compiler_DEPENDENCIES =
g_idl_compiler_LDFLAGS =
am_g_idl_generate_OBJECTS = g_idl_generate-generate.$(OBJEXT)
g_idl_generate_OBJECTS = $(am_g_idl_generate_OBJECTS)
g_idl_generate_DEPENDENCIES = libgirepository.la
g_idl_generate_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/g_idl_compiler-compiler.Po \
	./$(DEPDIR)/g_idl_compiler-gidlmodule.Po \
	./$(DEPDIR)/g_idl_compiler-gidlnode.Po \
	./$(DEPDIR)/g_idl_compiler-gidlparser.Po \
	./$(DEPDIR)/g_idl_compiler-gmetadata.Po \
	./$(DEPDIR)/g_idl_generate-generate.Po \
	./$(DEPDIR)/libgirepository_la-ginfo.Plo \
	./$(DEPDIR)/libgirepository_la-ginvoke.Plo \
	./$(DEPDIR)/libgirepository_la-girepository.Plo \
	./$(DEPDIR)/libgirepository_la-gmetadata.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libgirepository_la_SOURCES) $(g_idl_compiler_SOURCES) \
	$(g_idl_generate_SOURCES)
HEADERS = $(girepo_HEADERS)

DIST_COMMON = $(girepo_HEADERS) $(srcdir)/Makefile.in Makefile.am
SOURCES = $(libgirepository_la_SOURCES) $(g_idl_compiler_SOURCES) $(g_idl_generate_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgirepository.la: $(libgirepository_la_OBJECTS) $(libgirepository_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libgirepository_la_LDFLAGS) $(libgirepository_la_OBJECTS) $(libgirepository_la_LIBADD) $(LIBS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
g-idl-compiler$(EXEEXT): $(g_idl_compiler_OBJECTS) $(g_idl_compiler_DEPENDENCIES) 
	@rm -f g-idl-compiler$(EXEEXT)
	$(LINK) $(g_idl_compiler_LDFLAGS) $(g_idl_compiler_OBJECTS) $(g_idl_compiler_LDADD) $(LIBS)
g-idl-generate$(EXEEXT): $(g_idl_generate_OBJECTS) $(g_idl_generate_DEPENDENCIES) 
	@rm -f g-idl-generate$(EXEEXT)
	$(LINK) $(g_idl_generate_LDFLAGS) $(g_idl_generate_OBJECTS) $(g_idl_generate_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/g_idl_compiler-compiler.Po
include ./$(DEPDIR)/g_idl_compiler-gidlmodule.Po
include ./$(DEPDIR)/g_idl_compiler-gidlnode.Po
include ./$(DEPDIR)/g_idl_compiler-gidlparser.Po
include ./$(DEPDIR)/g_idl_compiler-gmetadata.Po
include ./$(DEPDIR)/g_idl_generate-generate.Po
include ./$(DEPDIR)/libgirepository_la-ginfo.Plo
include ./$(DEPDIR)/libgirepository_la-ginvoke.Plo
include ./$(DEPDIR)/libgirepository_la-girepository.Plo
include ./$(DEPDIR)/libgirepository_la-gmetadata.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

libgirepository_la-girepository.o: girepository.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-girepository.o -MD -MP -MF "$(DEPDIR)/libgirepository_la-girepository.Tpo" \
	  -c -o libgirepository_la-girepository.o `test -f 'girepository.c' || echo '$(srcdir)/'`girepository.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-girepository.Tpo" "$(DEPDIR)/libgirepository_la-girepository.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-girepository.Tpo"; exit 1; \
	fi
#	source='girepository.c' object='libgirepository_la-girepository.o' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-girepository.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-girepository.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-girepository.o `test -f 'girepository.c' || echo '$(srcdir)/'`girepository.c

libgirepository_la-girepository.obj: girepository.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-girepository.obj -MD -MP -MF "$(DEPDIR)/libgirepository_la-girepository.Tpo" \
	  -c -o libgirepository_la-girepository.obj `if test -f 'girepository.c'; then $(CYGPATH_W) 'girepository.c'; else $(CYGPATH_W) '$(srcdir)/girepository.c'; fi`; \
	then mv -f "$(DEPDIR)/libgirepository_la-girepository.Tpo" "$(DEPDIR)/libgirepository_la-girepository.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-girepository.Tpo"; exit 1; \
	fi
#	source='girepository.c' object='libgirepository_la-girepository.obj' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-girepository.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-girepository.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-girepository.obj `if test -f 'girepository.c'; then $(CYGPATH_W) 'girepository.c'; else $(CYGPATH_W) '$(srcdir)/girepository.c'; fi`

libgirepository_la-girepository.lo: girepository.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-girepository.lo -MD -MP -MF "$(DEPDIR)/libgirepository_la-girepository.Tpo" \
	  -c -o libgirepository_la-girepository.lo `test -f 'girepository.c' || echo '$(srcdir)/'`girepository.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-girepository.Tpo" "$(DEPDIR)/libgirepository_la-girepository.Plo"; \
	else rm -f "$(DEPDIR)/libgirepository_la-girepository.Tpo"; exit 1; \
	fi
#	source='girepository.c' object='libgirepository_la-girepository.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgirepository_la-girepository.Plo' tmpdepfile='$(DEPDIR)/libgirepository_la-girepository.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-girepository.lo `test -f 'girepository.c' || echo '$(srcdir)/'`girepository.c

libgirepository_la-gmetadata.o: gmetadata.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-gmetadata.o -MD -MP -MF "$(DEPDIR)/libgirepository_la-gmetadata.Tpo" \
	  -c -o libgirepository_la-gmetadata.o `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-gmetadata.Tpo" "$(DEPDIR)/libgirepository_la-gmetadata.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-gmetadata.Tpo"; exit 1; \
	fi
#	source='gmetadata.c' object='libgirepository_la-gmetadata.o' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-gmetadata.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-gmetadata.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-gmetadata.o `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c

libgirepository_la-gmetadata.obj: gmetadata.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-gmetadata.obj -MD -MP -MF "$(DEPDIR)/libgirepository_la-gmetadata.Tpo" \
	  -c -o libgirepository_la-gmetadata.obj `if test -f 'gmetadata.c'; then $(CYGPATH_W) 'gmetadata.c'; else $(CYGPATH_W) '$(srcdir)/gmetadata.c'; fi`; \
	then mv -f "$(DEPDIR)/libgirepository_la-gmetadata.Tpo" "$(DEPDIR)/libgirepository_la-gmetadata.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-gmetadata.Tpo"; exit 1; \
	fi
#	source='gmetadata.c' object='libgirepository_la-gmetadata.obj' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-gmetadata.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-gmetadata.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-gmetadata.obj `if test -f 'gmetadata.c'; then $(CYGPATH_W) 'gmetadata.c'; else $(CYGPATH_W) '$(srcdir)/gmetadata.c'; fi`

libgirepository_la-gmetadata.lo: gmetadata.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-gmetadata.lo -MD -MP -MF "$(DEPDIR)/libgirepository_la-gmetadata.Tpo" \
	  -c -o libgirepository_la-gmetadata.lo `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-gmetadata.Tpo" "$(DEPDIR)/libgirepository_la-gmetadata.Plo"; \
	else rm -f "$(DEPDIR)/libgirepository_la-gmetadata.Tpo"; exit 1; \
	fi
#	source='gmetadata.c' object='libgirepository_la-gmetadata.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgirepository_la-gmetadata.Plo' tmpdepfile='$(DEPDIR)/libgirepository_la-gmetadata.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-gmetadata.lo `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c

libgirepository_la-ginfo.o: ginfo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-ginfo.o -MD -MP -MF "$(DEPDIR)/libgirepository_la-ginfo.Tpo" \
	  -c -o libgirepository_la-ginfo.o `test -f 'ginfo.c' || echo '$(srcdir)/'`ginfo.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-ginfo.Tpo" "$(DEPDIR)/libgirepository_la-ginfo.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-ginfo.Tpo"; exit 1; \
	fi
#	source='ginfo.c' object='libgirepository_la-ginfo.o' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-ginfo.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-ginfo.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-ginfo.o `test -f 'ginfo.c' || echo '$(srcdir)/'`ginfo.c

libgirepository_la-ginfo.obj: ginfo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-ginfo.obj -MD -MP -MF "$(DEPDIR)/libgirepository_la-ginfo.Tpo" \
	  -c -o libgirepository_la-ginfo.obj `if test -f 'ginfo.c'; then $(CYGPATH_W) 'ginfo.c'; else $(CYGPATH_W) '$(srcdir)/ginfo.c'; fi`; \
	then mv -f "$(DEPDIR)/libgirepository_la-ginfo.Tpo" "$(DEPDIR)/libgirepository_la-ginfo.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-ginfo.Tpo"; exit 1; \
	fi
#	source='ginfo.c' object='libgirepository_la-ginfo.obj' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-ginfo.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-ginfo.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-ginfo.obj `if test -f 'ginfo.c'; then $(CYGPATH_W) 'ginfo.c'; else $(CYGPATH_W) '$(srcdir)/ginfo.c'; fi`

libgirepository_la-ginfo.lo: ginfo.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-ginfo.lo -MD -MP -MF "$(DEPDIR)/libgirepository_la-ginfo.Tpo" \
	  -c -o libgirepository_la-ginfo.lo `test -f 'ginfo.c' || echo '$(srcdir)/'`ginfo.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-ginfo.Tpo" "$(DEPDIR)/libgirepository_la-ginfo.Plo"; \
	else rm -f "$(DEPDIR)/libgirepository_la-ginfo.Tpo"; exit 1; \
	fi
#	source='ginfo.c' object='libgirepository_la-ginfo.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgirepository_la-ginfo.Plo' tmpdepfile='$(DEPDIR)/libgirepository_la-ginfo.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-ginfo.lo `test -f 'ginfo.c' || echo '$(srcdir)/'`ginfo.c

libgirepository_la-ginvoke.o: ginvoke.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-ginvoke.o -MD -MP -MF "$(DEPDIR)/libgirepository_la-ginvoke.Tpo" \
	  -c -o libgirepository_la-ginvoke.o `test -f 'ginvoke.c' || echo '$(srcdir)/'`ginvoke.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-ginvoke.Tpo" "$(DEPDIR)/libgirepository_la-ginvoke.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-ginvoke.Tpo"; exit 1; \
	fi
#	source='ginvoke.c' object='libgirepository_la-ginvoke.o' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-ginvoke.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-ginvoke.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-ginvoke.o `test -f 'ginvoke.c' || echo '$(srcdir)/'`ginvoke.c

libgirepository_la-ginvoke.obj: ginvoke.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-ginvoke.obj -MD -MP -MF "$(DEPDIR)/libgirepository_la-ginvoke.Tpo" \
	  -c -o libgirepository_la-ginvoke.obj `if test -f 'ginvoke.c'; then $(CYGPATH_W) 'ginvoke.c'; else $(CYGPATH_W) '$(srcdir)/ginvoke.c'; fi`; \
	then mv -f "$(DEPDIR)/libgirepository_la-ginvoke.Tpo" "$(DEPDIR)/libgirepository_la-ginvoke.Po"; \
	else rm -f "$(DEPDIR)/libgirepository_la-ginvoke.Tpo"; exit 1; \
	fi
#	source='ginvoke.c' object='libgirepository_la-ginvoke.obj' libtool=no \
#	depfile='$(DEPDIR)/libgirepository_la-ginvoke.Po' tmpdepfile='$(DEPDIR)/libgirepository_la-ginvoke.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-ginvoke.obj `if test -f 'ginvoke.c'; then $(CYGPATH_W) 'ginvoke.c'; else $(CYGPATH_W) '$(srcdir)/ginvoke.c'; fi`

libgirepository_la-ginvoke.lo: ginvoke.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -MT libgirepository_la-ginvoke.lo -MD -MP -MF "$(DEPDIR)/libgirepository_la-ginvoke.Tpo" \
	  -c -o libgirepository_la-ginvoke.lo `test -f 'ginvoke.c' || echo '$(srcdir)/'`ginvoke.c; \
	then mv -f "$(DEPDIR)/libgirepository_la-ginvoke.Tpo" "$(DEPDIR)/libgirepository_la-ginvoke.Plo"; \
	else rm -f "$(DEPDIR)/libgirepository_la-ginvoke.Tpo"; exit 1; \
	fi
#	source='ginvoke.c' object='libgirepository_la-ginvoke.lo' libtool=yes \
#	depfile='$(DEPDIR)/libgirepository_la-ginvoke.Plo' tmpdepfile='$(DEPDIR)/libgirepository_la-ginvoke.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgirepository_la_CFLAGS) $(CFLAGS) -c -o libgirepository_la-ginvoke.lo `test -f 'ginvoke.c' || echo '$(srcdir)/'`ginvoke.c

g_idl_compiler-gidlparser.o: gidlparser.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlparser.o -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo" \
	  -c -o g_idl_compiler-gidlparser.o `test -f 'gidlparser.c' || echo '$(srcdir)/'`gidlparser.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo" "$(DEPDIR)/g_idl_compiler-gidlparser.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo"; exit 1; \
	fi
#	source='gidlparser.c' object='g_idl_compiler-gidlparser.o' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlparser.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlparser.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlparser.o `test -f 'gidlparser.c' || echo '$(srcdir)/'`gidlparser.c

g_idl_compiler-gidlparser.obj: gidlparser.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlparser.obj -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo" \
	  -c -o g_idl_compiler-gidlparser.obj `if test -f 'gidlparser.c'; then $(CYGPATH_W) 'gidlparser.c'; else $(CYGPATH_W) '$(srcdir)/gidlparser.c'; fi`; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo" "$(DEPDIR)/g_idl_compiler-gidlparser.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo"; exit 1; \
	fi
#	source='gidlparser.c' object='g_idl_compiler-gidlparser.obj' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlparser.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlparser.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlparser.obj `if test -f 'gidlparser.c'; then $(CYGPATH_W) 'gidlparser.c'; else $(CYGPATH_W) '$(srcdir)/gidlparser.c'; fi`

g_idl_compiler-gidlparser.lo: gidlparser.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlparser.lo -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo" \
	  -c -o g_idl_compiler-gidlparser.lo `test -f 'gidlparser.c' || echo '$(srcdir)/'`gidlparser.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo" "$(DEPDIR)/g_idl_compiler-gidlparser.Plo"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlparser.Tpo"; exit 1; \
	fi
#	source='gidlparser.c' object='g_idl_compiler-gidlparser.lo' libtool=yes \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlparser.Plo' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlparser.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlparser.lo `test -f 'gidlparser.c' || echo '$(srcdir)/'`gidlparser.c

g_idl_compiler-gidlmodule.o: gidlmodule.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlmodule.o -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo" \
	  -c -o g_idl_compiler-gidlmodule.o `test -f 'gidlmodule.c' || echo '$(srcdir)/'`gidlmodule.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo" "$(DEPDIR)/g_idl_compiler-gidlmodule.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo"; exit 1; \
	fi
#	source='gidlmodule.c' object='g_idl_compiler-gidlmodule.o' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlmodule.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlmodule.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlmodule.o `test -f 'gidlmodule.c' || echo '$(srcdir)/'`gidlmodule.c

g_idl_compiler-gidlmodule.obj: gidlmodule.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlmodule.obj -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo" \
	  -c -o g_idl_compiler-gidlmodule.obj `if test -f 'gidlmodule.c'; then $(CYGPATH_W) 'gidlmodule.c'; else $(CYGPATH_W) '$(srcdir)/gidlmodule.c'; fi`; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo" "$(DEPDIR)/g_idl_compiler-gidlmodule.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo"; exit 1; \
	fi
#	source='gidlmodule.c' object='g_idl_compiler-gidlmodule.obj' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlmodule.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlmodule.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlmodule.obj `if test -f 'gidlmodule.c'; then $(CYGPATH_W) 'gidlmodule.c'; else $(CYGPATH_W) '$(srcdir)/gidlmodule.c'; fi`

g_idl_compiler-gidlmodule.lo: gidlmodule.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlmodule.lo -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo" \
	  -c -o g_idl_compiler-gidlmodule.lo `test -f 'gidlmodule.c' || echo '$(srcdir)/'`gidlmodule.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo" "$(DEPDIR)/g_idl_compiler-gidlmodule.Plo"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlmodule.Tpo"; exit 1; \
	fi
#	source='gidlmodule.c' object='g_idl_compiler-gidlmodule.lo' libtool=yes \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlmodule.Plo' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlmodule.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlmodule.lo `test -f 'gidlmodule.c' || echo '$(srcdir)/'`gidlmodule.c

g_idl_compiler-gidlnode.o: gidlnode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlnode.o -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo" \
	  -c -o g_idl_compiler-gidlnode.o `test -f 'gidlnode.c' || echo '$(srcdir)/'`gidlnode.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo" "$(DEPDIR)/g_idl_compiler-gidlnode.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo"; exit 1; \
	fi
#	source='gidlnode.c' object='g_idl_compiler-gidlnode.o' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlnode.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlnode.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlnode.o `test -f 'gidlnode.c' || echo '$(srcdir)/'`gidlnode.c

g_idl_compiler-gidlnode.obj: gidlnode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlnode.obj -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo" \
	  -c -o g_idl_compiler-gidlnode.obj `if test -f 'gidlnode.c'; then $(CYGPATH_W) 'gidlnode.c'; else $(CYGPATH_W) '$(srcdir)/gidlnode.c'; fi`; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo" "$(DEPDIR)/g_idl_compiler-gidlnode.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo"; exit 1; \
	fi
#	source='gidlnode.c' object='g_idl_compiler-gidlnode.obj' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlnode.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlnode.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlnode.obj `if test -f 'gidlnode.c'; then $(CYGPATH_W) 'gidlnode.c'; else $(CYGPATH_W) '$(srcdir)/gidlnode.c'; fi`

g_idl_compiler-gidlnode.lo: gidlnode.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gidlnode.lo -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo" \
	  -c -o g_idl_compiler-gidlnode.lo `test -f 'gidlnode.c' || echo '$(srcdir)/'`gidlnode.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo" "$(DEPDIR)/g_idl_compiler-gidlnode.Plo"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gidlnode.Tpo"; exit 1; \
	fi
#	source='gidlnode.c' object='g_idl_compiler-gidlnode.lo' libtool=yes \
#	depfile='$(DEPDIR)/g_idl_compiler-gidlnode.Plo' tmpdepfile='$(DEPDIR)/g_idl_compiler-gidlnode.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gidlnode.lo `test -f 'gidlnode.c' || echo '$(srcdir)/'`gidlnode.c

g_idl_compiler-gmetadata.o: gmetadata.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gmetadata.o -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo" \
	  -c -o g_idl_compiler-gmetadata.o `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo" "$(DEPDIR)/g_idl_compiler-gmetadata.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo"; exit 1; \
	fi
#	source='gmetadata.c' object='g_idl_compiler-gmetadata.o' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gmetadata.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gmetadata.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gmetadata.o `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c

g_idl_compiler-gmetadata.obj: gmetadata.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gmetadata.obj -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo" \
	  -c -o g_idl_compiler-gmetadata.obj `if test -f 'gmetadata.c'; then $(CYGPATH_W) 'gmetadata.c'; else $(CYGPATH_W) '$(srcdir)/gmetadata.c'; fi`; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo" "$(DEPDIR)/g_idl_compiler-gmetadata.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo"; exit 1; \
	fi
#	source='gmetadata.c' object='g_idl_compiler-gmetadata.obj' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-gmetadata.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-gmetadata.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gmetadata.obj `if test -f 'gmetadata.c'; then $(CYGPATH_W) 'gmetadata.c'; else $(CYGPATH_W) '$(srcdir)/gmetadata.c'; fi`

g_idl_compiler-gmetadata.lo: gmetadata.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-gmetadata.lo -MD -MP -MF "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo" \
	  -c -o g_idl_compiler-gmetadata.lo `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo" "$(DEPDIR)/g_idl_compiler-gmetadata.Plo"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-gmetadata.Tpo"; exit 1; \
	fi
#	source='gmetadata.c' object='g_idl_compiler-gmetadata.lo' libtool=yes \
#	depfile='$(DEPDIR)/g_idl_compiler-gmetadata.Plo' tmpdepfile='$(DEPDIR)/g_idl_compiler-gmetadata.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-gmetadata.lo `test -f 'gmetadata.c' || echo '$(srcdir)/'`gmetadata.c

g_idl_compiler-compiler.o: compiler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-compiler.o -MD -MP -MF "$(DEPDIR)/g_idl_compiler-compiler.Tpo" \
	  -c -o g_idl_compiler-compiler.o `test -f 'compiler.c' || echo '$(srcdir)/'`compiler.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-compiler.Tpo" "$(DEPDIR)/g_idl_compiler-compiler.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-compiler.Tpo"; exit 1; \
	fi
#	source='compiler.c' object='g_idl_compiler-compiler.o' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-compiler.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-compiler.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-compiler.o `test -f 'compiler.c' || echo '$(srcdir)/'`compiler.c

g_idl_compiler-compiler.obj: compiler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-compiler.obj -MD -MP -MF "$(DEPDIR)/g_idl_compiler-compiler.Tpo" \
	  -c -o g_idl_compiler-compiler.obj `if test -f 'compiler.c'; then $(CYGPATH_W) 'compiler.c'; else $(CYGPATH_W) '$(srcdir)/compiler.c'; fi`; \
	then mv -f "$(DEPDIR)/g_idl_compiler-compiler.Tpo" "$(DEPDIR)/g_idl_compiler-compiler.Po"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-compiler.Tpo"; exit 1; \
	fi
#	source='compiler.c' object='g_idl_compiler-compiler.obj' libtool=no \
#	depfile='$(DEPDIR)/g_idl_compiler-compiler.Po' tmpdepfile='$(DEPDIR)/g_idl_compiler-compiler.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-compiler.obj `if test -f 'compiler.c'; then $(CYGPATH_W) 'compiler.c'; else $(CYGPATH_W) '$(srcdir)/compiler.c'; fi`

g_idl_compiler-compiler.lo: compiler.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -MT g_idl_compiler-compiler.lo -MD -MP -MF "$(DEPDIR)/g_idl_compiler-compiler.Tpo" \
	  -c -o g_idl_compiler-compiler.lo `test -f 'compiler.c' || echo '$(srcdir)/'`compiler.c; \
	then mv -f "$(DEPDIR)/g_idl_compiler-compiler.Tpo" "$(DEPDIR)/g_idl_compiler-compiler.Plo"; \
	else rm -f "$(DEPDIR)/g_idl_compiler-compiler.Tpo"; exit 1; \
	fi
#	source='compiler.c' object='g_idl_compiler-compiler.lo' libtool=yes \
#	depfile='$(DEPDIR)/g_idl_compiler-compiler.Plo' tmpdepfile='$(DEPDIR)/g_idl_compiler-compiler.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_compiler_CFLAGS) $(CFLAGS) -c -o g_idl_compiler-compiler.lo `test -f 'compiler.c' || echo '$(srcdir)/'`compiler.c

g_idl_generate-generate.o: generate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_generate_CFLAGS) $(CFLAGS) -MT g_idl_generate-generate.o -MD -MP -MF "$(DEPDIR)/g_idl_generate-generate.Tpo" \
	  -c -o g_idl_generate-generate.o `test -f 'generate.c' || echo '$(srcdir)/'`generate.c; \
	then mv -f "$(DEPDIR)/g_idl_generate-generate.Tpo" "$(DEPDIR)/g_idl_generate-generate.Po"; \
	else rm -f "$(DEPDIR)/g_idl_generate-generate.Tpo"; exit 1; \
	fi
#	source='generate.c' object='g_idl_generate-generate.o' libtool=no \
#	depfile='$(DEPDIR)/g_idl_generate-generate.Po' tmpdepfile='$(DEPDIR)/g_idl_generate-generate.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_generate_CFLAGS) $(CFLAGS) -c -o g_idl_generate-generate.o `test -f 'generate.c' || echo '$(srcdir)/'`generate.c

g_idl_generate-generate.obj: generate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_generate_CFLAGS) $(CFLAGS) -MT g_idl_generate-generate.obj -MD -MP -MF "$(DEPDIR)/g_idl_generate-generate.Tpo" \
	  -c -o g_idl_generate-generate.obj `if test -f 'generate.c'; then $(CYGPATH_W) 'generate.c'; else $(CYGPATH_W) '$(srcdir)/generate.c'; fi`; \
	then mv -f "$(DEPDIR)/g_idl_generate-generate.Tpo" "$(DEPDIR)/g_idl_generate-generate.Po"; \
	else rm -f "$(DEPDIR)/g_idl_generate-generate.Tpo"; exit 1; \
	fi
#	source='generate.c' object='g_idl_generate-generate.obj' libtool=no \
#	depfile='$(DEPDIR)/g_idl_generate-generate.Po' tmpdepfile='$(DEPDIR)/g_idl_generate-generate.TPo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_generate_CFLAGS) $(CFLAGS) -c -o g_idl_generate-generate.obj `if test -f 'generate.c'; then $(CYGPATH_W) 'generate.c'; else $(CYGPATH_W) '$(srcdir)/generate.c'; fi`

g_idl_generate-generate.lo: generate.c
	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_generate_CFLAGS) $(CFLAGS) -MT g_idl_generate-generate.lo -MD -MP -MF "$(DEPDIR)/g_idl_generate-generate.Tpo" \
	  -c -o g_idl_generate-generate.lo `test -f 'generate.c' || echo '$(srcdir)/'`generate.c; \
	then mv -f "$(DEPDIR)/g_idl_generate-generate.Tpo" "$(DEPDIR)/g_idl_generate-generate.Plo"; \
	else rm -f "$(DEPDIR)/g_idl_generate-generate.Tpo"; exit 1; \
	fi
#	source='generate.c' object='g_idl_generate-generate.lo' libtool=yes \
#	depfile='$(DEPDIR)/g_idl_generate-generate.Plo' tmpdepfile='$(DEPDIR)/g_idl_generate-generate.TPlo' \
#	$(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(g_idl_generate_CFLAGS) $(CFLAGS) -c -o g_idl_generate-generate.lo `test -f 'generate.c' || echo '$(srcdir)/'`generate.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
girepoHEADERS_INSTALL = $(INSTALL_HEADER)
install-girepoHEADERS: $(girepo_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(girepodir)
	@list='$(girepo_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(girepoHEADERS_INSTALL) $$d$$p $(DESTDIR)$(girepodir)/$$f"; \
	  $(girepoHEADERS_INSTALL) $$d$$p $(DESTDIR)$(girepodir)/$$f; \
	done

uninstall-girepoHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(girepo_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(girepodir)/$$f"; \
	  rm -f $(DESTDIR)$(girepodir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES


installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(bindir) $(DESTDIR)$(girepodir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-girepoHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-girepoHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-girepoHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-girepoHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
