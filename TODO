XML format
----------
- Document the format
- Write a scanner to create XML from annotated headers
- Add attributes to connect signals to their default handlers
  and wrappers to their vfuncs
- Add attributes for struct offsets
- Add a way to specify default values
- Add a way to specify annotations
- Add a way to mark init functions like gtk_init

Binary format
-------------
- Type cleanup:
  + for integral types, we just need to discriminate types by width
    and signedness, but keep separate types for platform-dependent types
    like short, int, long, size_t. We should not try to capture different
    type names like guchar vs guint8 vs int8_t.
  + there should probably not be a char type
  + for strings, we need "UTF-8-encoded 0-terminated string and 
    "0-terminated byte array", possibly with annotation for encoding
- Sort arrays so that we can use bsearch for lookup
- Maybe add hashes to lookup interfaces and functions in interfaces
- Add default values
- Write a validator
- Make annotations more flexible (and typed)

Compiler
--------
- Cleanup, maybe turn the nodes in to objects to avoid the horrific 
  type switches
- Add thorough error checking

Repository
----------
- Reconsider the current clunky API, maybe an iterator approach is better
- Add thorough error checking
- Use hashes 
- Maybe allow populating repositories at runtime
- Think about a system-wide repository mapping namespace ids to 
  libraries/metadata files
- Fix extra indirection for out parameters in invoke

General
-------
- More tests
- Check how the format scales to something the size of GTK+
